2011-06-06 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qthread/qthread.h, include/qthread_innards.h,
	  src/qthread.c: compile on SparcV9-32 again

2011-06-06 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_atomics.h: swap instruction on SparcV9 is deprecated

2011-06-06 19:28  Kyle Wheeler <kbwheel@sandia.gov>

	* include/qt_threadqueues.h: the necessary #def for ssize_t

2011-06-06 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* .:

2011-06-06 02:40  Kyle Wheeler <kbwheel@sandia.gov>

	* using syncvars here seems to add a little bit of performance

2011-06-06 00:49  Kyle Wheeler <kbwheel@sandia.gov>

	* select default scheduler if none is specified

2011-06-06 00:49  Kyle Wheeler <kbwheel@sandia.gov>

	* a little more output

2011-06-04 05:48  Kyle Wheeler <kbwheel@sandia.gov>

	* lock-free lifo threadqueues

2011-06-04 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* switch to using SPINLOCK_BODY() for portability, and remove a
	  redundant assert()

2011-06-04 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* mark these functions as INTERNAL

2011-06-04 05:46  Kyle Wheeler <kbwheel@sandia.gov>

	* include threadqueue files in distribution

2011-06-04 02:43  Kyle Wheeler <kbwheel@sandia.gov>

	* whoops; fix autoconf syntax error

2011-06-04 02:29  Kyle Wheeler <kbwheel@sandia.gov>

	* new threadqueue implementation: nemesis queue (still FIFO, but
	  faster & simpler than the default lock-free queue)

2011-06-03 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* provide the SPINLOCK_BODY() macro for efficient spinning on
	  hyperthreaded Intel machines

2011-06-03 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* make the next pointer volatile, to enable more efficient queue
	  implementations (like NEMESIS)

2011-06-03 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* add cacheline width configure option (for speed freaks who want
	  to optimize internal data layout)

2011-06-03 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* enqueue_yielded should apply to all threadqueue implementations

2011-06-03 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* more modularity, so that the threadqueue and its associated data
	  structures can be *entirely* implementation-dependent

2011-06-03 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* move the queue node definition into the threadqueue.c file to
	  make the threadqueue API more modular

2011-06-02 20:23  Allan Porterfield <akp@renci.org>

	* Make the arrays for the shepherds be dynamically sized
	  (qloop_innards.h) current_workers dynamic not hard coded to 4
	  (maestro_sched.c) allowed_workers dynamic not hard coded to 4
	  (rose_xomp.c) allocated dynamic current_worker array

2011-06-02 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix CHPL_HOME preservation for distcheck

2011-06-02 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* fix warnings from old Intel compiler

2011-06-02 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* fix warnings from old Intel compiler

2011-06-02 05:56  Kyle Wheeler <kbwheel@sandia.gov>

	* add more asserts, change the return values of some of the hash
	  functions

2011-06-02 04:47  Kyle Wheeler <kbwheel@sandia.gov>

	* we don't support cprops anymore, so remove old cprops #defs

2011-06-01 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* simplifying; removing superfluous #includes and such, now that we
	  are not trying to duplicate the makecontext() interface EXACTLY

2011-06-01 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* adding some documentation comments

2011-06-01 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* update to reflect file rename and repurposing

2011-06-01 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* needed to use an older definition of AC_PROG_SED to stay
	  compatible with autoconf 2.59; this one has been tested with old
	  autoconf, and seems to work.

2011-06-01 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* first attempt at backwards compatibility for AC_PROG_SED

2011-06-01 05:49  Kyle Wheeler <kbwheel@sandia.gov>

	* updating Changelog/News/Authors to prepare for 1.6

2011-06-01 05:34  Kyle Wheeler <kbwheel@sandia.gov>

	* even more ideas

2011-06-01 05:16  Kyle Wheeler <kbwheel@sandia.gov>

	* more detail

2011-06-01 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* more ideas

2011-05-30 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* more formatting updates

2011-05-30 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* minor formatting fix

2011-05-30 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* I *THINK* this fixes the %esi problem. If so, it was actually a
	  stack location problem. I was using a slightly wrong stack
	  pointer (I was including a stale return location) which made
	  function calls corrupt the stack, when ended up manifesting as a
	  wrong %esi for reasons I don't entirely understand.

2011-05-30 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* convenience target for building tests

2011-05-30 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* only test the read feature if syscall intercepting is turned on

2011-05-30 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* this is not at all Marcell's code anymore, so remove the
	  copyright notice. And store/restore SSE2 control and status word
	  on 32-bit platforms. <sigh> (this is not the %esi bug)

2011-05-28 06:54  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the assert-enable logic

2011-05-28 01:39  Kyle Wheeler <kbwheel@sandia.gov>

	* change the way profiling is enabled; also fix rlimit logic

2011-05-28 01:21  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganized configure.in to make it easier to maintain and to
	  follow the logic

2011-05-27 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* beginning a reorganization of configure to be easier to read

2011-05-27 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* fix atomic behavior on old compilers (<= gcc4.0) in 32-bit
	  environments

2011-05-26 18:40  Allan Porterfield <akp@renci.org>

	* insert code to change the number of active workers on demand from
	  rcrtool
	  (qthread_innerds,h) add flag to allow dynamic thread control to
	  be turned off
	  (common_rcrtool.c) add optional output statements giving L3
	  misses per socket
	  (rose_xomp.c) add dynamic control of active workers
	  (qthread.c) add flag to allow dynamic thread control to be turned
	  off
	  fix code on termination forces worker 0 (leave with same thread
	  that
	  enters -- makes the stack correct during termination)

2011-05-26 01:40  Kyle Wheeler <kbwheel@sandia.gov>

	* do not intercept syscalls by default (needs testing)

2011-05-26 01:39  Kyle Wheeler <kbwheel@sandia.gov>

	* why was this in here?

2011-05-26 00:46  Kyle Wheeler <kbwheel@sandia.gov>

	* connect != accept

2011-05-25 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* __sync_synchronize() failure only happens when you link...

2011-05-25 23:18  Kyle Wheeler <kbwheel@sandia.gov>

	* be a little more portable with __sync_synchronize()

2011-05-25 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* make CXX test flag work again

2011-05-25 22:57  Kyle Wheeler <kbwheel@sandia.gov>

	* connect may not exist

2011-05-25 22:42  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_exec is internal

2011-05-25 14:10  Allan Porterfield <akp@renci.org>

	* fix typo inside ROSE ifdef section

2011-05-25 08:31  Kyle Wheeler <kbwheel@sandia.gov>

	* wrong syscall; need to check accept()... because solaris is being
	  dumb and has a *close* but not equivalent declaration. <sigh>

2011-05-25 08:21  Kyle Wheeler <kbwheel@sandia.gov>

	* extra testing for accept() intercepting (this is dumb)

2011-05-25 08:14  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing some Solaris compiling issues (not done)

2011-05-25 07:51  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the compiler warning

2011-05-25 07:50  Kyle Wheeler <kbwheel@sandia.gov>

	* install the header to the correct location

2011-05-25 06:53  Kyle Wheeler <kbwheel@sandia.gov>

	* compile without an installed qthreads

2011-05-25 06:41  Kyle Wheeler <kbwheel@sandia.gov>

	* fix ordering on the uninstall-local target

2011-05-25 06:34  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo that prevented optional syscalls from being built

2011-05-25 06:18  Kyle Wheeler <kbwheel@sandia.gov>

	* add GCC visibility support

2011-05-25 05:31  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid a dumb compiler warning in some circumstances

2011-05-25 05:27  Kyle Wheeler <kbwheel@sandia.gov>

	* simplifying the file structure

2011-05-25 05:24  Kyle Wheeler <kbwheel@sandia.gov>

	* remove extraneous Chapel files

2011-05-25 05:21  Kyle Wheeler <kbwheel@sandia.gov>

	* change the way we do support for Chapel; this way Brad seems to
	  like better, and makes a more convincing case that the Chapel
	  support code actually part of qthreads

2011-05-24 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* intercept pread() too

2011-05-24 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compile on Solaris

2011-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* this seems to avoid segfaults... not sure why yet

2011-05-23 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Cray copyright (whoops!)

2011-05-23 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* match current Chapel svn

2011-05-23 12:22  Kyle Wheeler <kbwheel@sandia.gov>

	* header files for abort and gettimeofday

2011-05-23 11:54  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2011-05-23 11:53  Kyle Wheeler <kbwheel@sandia.gov>

	* machines are fast enough now... zero-length qtimer results may
	  just mean sub-micro-second execution

2011-05-23 11:45  Kyle Wheeler <kbwheel@sandia.gov>

	* include qt_io.h header

2011-05-23 11:38  Kyle Wheeler <kbwheel@sandia.gov>

	* on Linux, syscall() requires unistd.h

2011-05-19 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary Q_DEPRECATED comment (qthread_num_shepherds is
	  here to stay)

2011-05-19 05:01  Kyle Wheeler <kbwheel@sandia.gov>

	* better comments and some debugging functions implemented

2011-05-19 04:44  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid using malloc in spawning tasks

2011-05-19 04:43  Kyle Wheeler <kbwheel@sandia.gov>

	* make copyargs fork function public

2011-05-13 00:15  Kyle Wheeler <kbwheel@sandia.gov>

	* correctly shut down the IO interface *BEFORE* shutting down the
	  worker threads (otherwise bad things can happen)

2011-05-11 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2011-05-11 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* the rest of the important syscalls

2011-05-11 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* allow/enable arbitrary blocking operations

2011-05-11 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler warning

2011-05-11 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* change the latency arbitrarily

2011-05-11 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* re-organize syscall functions into files, to make it easier to
	  turn them on and off

2011-05-11 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* basic proof-of-concept read operation proven to work

2011-05-11 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* always test C++

2011-05-11 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the #include

2011-05-10 15:54  gmackey@gmail.com

	* Oops! Didn't mean to commit on that last one. Was just testing
	  something
	  out. This reverts the previous commit.

2011-05-10 15:53  gmackey@gmail.com

	* lsdkfj

2011-05-10 15:50  gmackey@gmail.com

	* Adding a test of the new C++ interface, and adding the test as an
	  extra
	  program in the makefile. Include stdio.h in src/io.c so things
	  will compile.

2011-05-09 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* C++ qloop interface

2011-05-09 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* fix memory leak (thanks Greg!)

2011-05-04 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* first real syscall (untested)

2011-05-04 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* sleep should work outside of qthreads

2011-05-04 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* sleep syscalls

2011-05-04 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* detect missing syscalls

2011-05-04 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* no external hash maps

2011-05-04 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* io.c now compiles; still does nothing

2011-05-04 19:12  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace readability

2011-05-04 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* how did this EVER work???

2011-05-03 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* not yet functional

2011-05-02 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* make test faster on systems with lots of processors

2011-05-02 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* work faster on work-stealing shepherds

2011-05-02 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* this test does not work under work-stealing regimes

2011-05-02 14:54  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler warning w/ gcc 4.6

2011-05-02 14:52  Kyle Wheeler <kbwheel@sandia.gov>

	* compile with debug turned on

2011-04-30 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* reformatting

2011-04-30 06:57  Kyle Wheeler <kbwheel@sandia.gov>

	* fix misc compiler warnings (-Wextra)

2011-04-30 06:47  Kyle Wheeler <kbwheel@sandia.gov>

	* fix misc compiler warnings (-Wextra)

2011-04-29 14:30  Allan Porterfield <akp@renci.org>

	* added needed ifdef and remove debugging printfs

2011-04-29 14:10  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debug variables

2011-04-29 14:09  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unused variable in qt_omp_parallel_region_create

2011-04-20 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the includes

2011-04-18 14:38  Kyle Wheeler <kbwheel@sandia.gov>

	* new thoughts

2011-04-18 14:38  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2011-04-15 18:28  Allan Porterfield <akp@renci.org>

	* Start at rcrdaemon infomation changing MAESTRO scheduling of
	  loops
	  (tasks later). Adding prototype interface between daemon and
	  scheduler
	  and making changes in both the daemon and scheduler to use the
	  interface.
	  (qloop_innards.h) modify loop structure to track active thread
	  per socket
	  (maestro_sched.h) add interface include file between daemon and
	  scheduler
	  (bcGen.c) use new interface in daemon and reduce calls to
	  interface
	  (maestro_sched.c) initial prototype of interface
	  (Makefile.inc) add new files to compilation
	  (common_rcrtool.c) fix bug
	  (rose_xomp.c) use interface to limit threads when memory
	  concurrency is high

2011-04-13 15:20  debiddo99

	* Fix to log the numberOfThreads in a call to XOMP_parallel_start.
	  Fixed use of rcrtoollevel. Attempt to pin rcrtool daemon.

2011-04-12 19:54  Kyle Wheeler <kbwheel@sandia.gov>

	* external syncvar test

2011-04-12 19:54  Kyle Wheeler <kbwheel@sandia.gov>

	* <sigh> now make it *really* work

2011-04-12 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* pthread_join is a blocking call; cannot use it in the main thread

2011-04-11 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2011-04-11 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* make it compile

2011-04-08 17:52  Allan Porterfield <akp@renci.org>

	* need the ifClause argument to compile

2011-04-08 12:02  debiddo99

	* Fix to rose_xomp.c. Previous check-in left off a function
	  parameter.

2011-04-08 11:59  debiddo99

	* Some clean up and organization of code in the RCRTool files.

2011-04-07 18:28  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) switch to interruptable barrier from spin lock when
	  nested
	  parallelism has been detected someplace in the code
	  (qthread.c) return 1 qt_omp_parallel_region_create from if nested
	  parallelism
	  fix previous pointer so that works when not nested

2011-04-07 15:44  Allan Porterfield <akp@renci.org>

	* (qt_shepherd_innards.h) remove unneeded member (parallel region
	  now
	  all in threads)
	  (rose_xomp.c) add if clause to parallel_start (from ROSE)
	  add num_threads caluse support
	  if nested allow switch to non spin barriers
	  (qthread.c) all parallel region control now in threads

2011-04-06 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* external threads may use basic (original) FEBs

2011-04-06 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* external threads may use lock/unlock

2011-04-06 14:27  Kyle Wheeler <kbwheel@sandia.gov>

	* update ChangeLog - 1.5.2b

2011-04-06 14:19  Kyle Wheeler <kbwheel@sandia.gov>

	* remove clutter

2011-04-06 14:18  Kyle Wheeler <kbwheel@sandia.gov>

	* remove clutter

2011-04-06 13:40  Kyle Wheeler <kbwheel@sandia.gov>

	* its not OSX compatibility anymore

2011-04-06 13:24  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler complaint about stdio

2011-04-06 13:09  Kyle Wheeler <kbwheel@sandia.gov>

	* rename local context datastructures to allow better integration
	  with linux and shared libraries (3 of 3)

2011-04-06 12:50  Kyle Wheeler <kbwheel@sandia.gov>

	* rename local get/setcontext to allow better integration with
	  linux and shared libraries (2 of 3)

2011-04-06 12:46  Kyle Wheeler <kbwheel@sandia.gov>

	* rename local makecontext to allow better integration with linux
	  and shared libraries (0 of 3)

2011-04-06 12:41  Kyle Wheeler <kbwheel@sandia.gov>

	* rename local swapcontext to allow better integration with linux
	  and shared libraries (1 of 3)

2011-04-06 12:25  Kyle Wheeler <kbwheel@sandia.gov>

	* remove man pages

2011-04-06 12:24  Kyle Wheeler <kbwheel@sandia.gov>

	* missed a man page

2011-04-06 05:28  Kyle Wheeler <kbwheel@sandia.gov>

	* reformatting

2011-04-06 05:23  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2011-04-06 04:49  Kyle Wheeler <kbwheel@sandia.gov>

	* add documentation for setchunk

2011-04-06 03:56  Kyle Wheeler <kbwheel@sandia.gov>

	* qtimer_fastrand documentation

2011-04-06 03:53  Kyle Wheeler <kbwheel@sandia.gov>

	* install them

2011-04-06 03:51  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_loop_step* documentation

2011-04-06 03:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray_iter_loop_nb documentation

2011-04-06 03:18  Kyle Wheeler <kbwheel@sandia.gov>

	* feb barrier documentation

2011-04-06 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* update semantics to 1.5

2011-04-05 23:51  Kyle Wheeler <kbwheel@sandia.gov>

	* single argument wrappers for readFF and readFE

2011-04-05 18:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fixes to enable multilocale

2011-04-05 17:22  Allan Porterfield <akp@renci.org>

	* move empty of taskWaitLock until after worker is initialized (and
	  only do once)

2011-04-05 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* tidying up qthread.c...

2011-04-05 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the qthread.h path problem (whoops!)

2011-04-05 15:06  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce unnecessary include lines

2011-04-05 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustifying

2011-04-05 14:29  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustifying

2011-04-05 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-04-05 14:21  Kyle Wheeler <kbwheel@sandia.gov>

	* extract locks and FEB operations into their own respective files

2011-04-05 13:11  Kyle Wheeler <kbwheel@sandia.gov>

	* allow syncvar opterations from outside qthreads

2011-04-04 21:05  debiddo99

	* Fixed problem with bad reference to rcrtoollevel

2011-04-04 20:37  debiddo99

	* Adding initial version of RCRTool daemon support.

2011-04-04 13:35  Allan Porterfield <akp@renci.org>

	* Changes to speed up parallel loop start up/execution
	  Added personal spin loop under config to ease debugging
	  (qt_qthread_struct.h) add flag to force thread to worker 0 for
	  termination
	  (qt_threadqueues.h) add stealable task count
	  (qt_atomics.h) add mechanism to get to debug spin lock (seems to
	  be measurably faster than pthreads spin_lock)
	  (qthread_innards.h) add call declation to force thread to worker
	  0
	  (rose_xomp.h) add new Rose extention
	  add new lock type (spin lock) to XOMP
	  (threadqueues.c) add debug spin lock
	  add stealable task cnt
	  (rose_xomp.c) rework critical sections
	  add spuin barrier (Mis-named XOMP_spin_lock?)
	  (qthread.c) add function to force thread to worker 0
	  (qloop.c) change parallel loops startup (non-future) to tree
	  based rather than
	  loop based
	  (qt_barrier.c) make dummy unsigned to remove compile warnings

2011-04-01 23:45  stephenolivier@gmail.com

	* adjustment in OMP affinity stealing control

2011-04-01 18:33  stephenolivier@gmail.com

	* Added more OMP affinity functions

2011-03-31 22:51  stephenolivier@gmail.com

	* Set OpenMP child task affinity off by default
	  Make affinity-related flags visible at user level

2011-03-30 23:34  stephenolivier@gmail.com

	* Added OpenMP affinity wrappers to memory affinity functions
	  qt_affinity_*

2011-03-30 22:04  stephenolivier@gmail.com

	* First shot at some experimental affinity extensions for OpenMP.
	  Added code is guarded by QTHREAD_OMP_AFFINITY with a
	  corresponding configure script entry.

2011-03-30 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-29 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-25 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.5.1 stuff

2011-03-22 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* fixes to compile and run on CYGWIN (that's right, I said Cygwin)

2011-03-22 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* alphabetize ordering (to emphasize that there is no implicit
	  dependency)

2011-03-21 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* Itanium compiler warning fixes && ICC compile fixes

2011-03-21 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing compiler warnings on Itanium

2011-03-21 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing compiler warnings on Itanium

2011-03-21 15:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix newline

2011-03-21 15:09  Kyle Wheeler <kbwheel@sandia.gov>

	* fixes compiling (thanks for pointing it out Allan!)

2011-03-17 14:06  Kyle Wheeler <kbwheel@sandia.gov>

	* bump version to 1.5.1b

2011-03-17 14:05  Kyle Wheeler <kbwheel@sandia.gov>

	* include chapel shim files in the standard distribution

2011-03-17 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* chapel is now part of the standard checkout

2011-03-17 13:55  Kyle Wheeler <kbwheel@sandia.gov>

	* lets just make this part of qthreads proper

2011-03-16 22:06  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-16 20:40  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-16 20:33  Kyle Wheeler <kbwheel@sandia.gov>

	* uncrustified

2011-03-16 19:54  Allan Porterfield <akp@renci.org>

	* comment out parallel region cleanup -- there is a race condition
	  that
	  occasionly causes a hang as data is cleaned up before it is
	  use for the last time

2011-03-16 19:51  Allan Porterfield <akp@renci.org>

	* rewrite XOMP_critical to use compare ans swap rather than FEB for
	  speed

2011-03-15 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compilation without multiple shepherds

2011-03-15 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* MACHINE_READABLE option

2011-03-15 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* false sharing should be volatile, to avoid optimizations on that
	  loop

2011-03-15 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* deal with old hwloc versions (i.e. without memory affinity)

2011-03-15 14:48  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the guess_num_workers function call name (thanks Allan!)

2011-03-14 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* undo affinity specifications when finalize is called

2011-03-14 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* improve the affinity interface with Romain's patch (modified
	  slightly to suit my taste)

2011-03-14 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* unnecessary header information

2011-03-14 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* more predictable handling of qthread_debug integer args

2011-03-11 20:40  Allan Porterfield <akp@renci.org>

	* Deleted the last change from the SVN ci file but it changed it
	  anyway.
	  I think this backs the affinity changes out from the last
	  checkin,
	  (I don't understand why I need these locally to compile but
	  should
	  keep them tlocal until I do

2011-03-11 20:35  Allan Porterfield <akp@renci.org>

	* Changes to mover from hardware thread number to software thread
	  number
	  for barrier computations in OpenMP
	  (qthread.h) add barrier id call
	  (qt_shepherd_innards.h) add function to get current worker
	  structure
	  (rose_xomp.c) switch to using software id for all barrier-like
	  calls
	  (rose_log_arrivaldetector.c) switch to using software id for all
	  barrier-like calls
	  (qthread.c) add barrier id call
	  add and switch to internal call to get current worker structure
	  (qloop.c) set software id when generating chucks of work from
	  loops

2011-03-10 17:38  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debugging printouts

2011-03-10 17:24  Kyle Wheeler <kbwheel@sandia.gov>

	* Pushing memory affinity operations into the affinity shim API.
	  Also pushed the changes from Romain Dolbeau to improve hwloc
	  support.

2011-03-10 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary functions

2011-03-09 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* alter the way worker threads bind themselves to member-objects of
	  shared resources to improve performance. In other words, if more
	  than one shepherd is sitting within a shepherd boundary (e.g. a
	  socket), their worker threads will bind to different cores.
	  (note: not the solution Allan and I found, because that solution
	  was broken)

2011-03-09 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* more cache options, from Romain Dolbeau

2011-03-09 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* starting a memory affinity interface shim

2011-03-08 19:05  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a stealing problem where the pthread_id() changes between
	  qthread_initialize() and qthread_finalize()

2011-03-04 16:40  Allan Porterfield <akp@renci.org>

	* omp_get_dynamic takes and returns a true value of whether dynamic
	  thread counts are allowed -- not a specific number

2011-03-01 19:09  Allan Porterfield <akp@renci.org>

	* fixes
	  allow multiple parallel loops within a single parallel region
	  clean up after loop (double barrier for now - should
	  be within barrier)
	  fix static scheduling -- allow late joins even after first
	  thread completes its allocation
	  

2011-02-28 22:33  Allan Porterfield <akp@renci.org>

	* (qthread.h) add function declaration to allow a thred making
	  itself unstealable
	  (rose_xomp.c) set the original function as unstealable to allow
	  parallel
	  region cleanup
	  add code to track departed workers -- to figure out when loops
	  can be
	  cleaned up
	  (qthread.c) add function to set thread as unstealable
	  try again on parallel region cleanup
	  (qloop.c) add function to wait for completion and clean up linked
	  list of loops

2011-02-25 22:33  Kyle Wheeler <kbwheel@sandia.gov>

	* completely ignoring the return value is an unacceptable solution
	  to the problems that crop up when you don't match the defined
	  thread prototype

2011-02-25 22:24  Kyle Wheeler <kbwheel@sandia.gov>

	* add assertion

2011-02-25 22:19  Allan Porterfield <akp@renci.org>

	* Rose generated fuctions have void return values. Writing the
	  return value to
	  a syncvar occasionally finds a negative value -- this causes
	  problems
	  change to write a 1 after the function completes

2011-02-25 15:51  Allan Porterfield <akp@renci.org>

	* (qthread.c) remove debugging
	  (qt_barrier.c) fix uplocking -- don't try to overstep array on
	  way down
	  - It has never been emptied

2011-02-25 14:01  Allan Porterfield <akp@renci.org>

	* Work on log barrier routine (using syncvar_t under the covers)
	  turn off clean up in parallel region termination -- may have
	  active loops still
	  fix soon
	  (qthread.c) turn off clean up in parallel region termination
	  (qt_barrier.c)use smaller hammer (qthread_syncvar_writeEF instead
	  of
	  qthread_syncvar_fill) gives me better assurance that everything
	  is in
	  sync

2011-02-24 18:36  Allan Porterfield <akp@renci.org>

	* fix some typos in switch to FEB's within log barrier -- need
	  better
	  testing strategy

2011-02-23 22:06  Allan Porterfield <akp@renci.org>

	* work on nested loop termination -- you can't delete the loop if
	  anyone
	  may at sometime in the future look at it. Save until parellel
	  region
	  termination and then delete all outstanding loops (we know they
	  are done)
	  (qthread.h) add list of loops (generic to ease include problems)
	  (qloop_innards.h) give loops next ponter so we can build linked
	  lists
	  (rose_xomp.c) remove loop deleting in middle of loop_end
	  remove code to reuse loops
	  add call to qt_omp_parallel_region_destroy()
	  (qthread.c) add qt_omp_parallel_region_destroy to clean up
	  parallel region
	  link parallel regions so we can back up during deletin
	  (qloop.c) add hook to link loops together

2011-02-23 20:21  Allan Porterfield <akp@renci.org>

	* change log barrier to use syncvars so that when long stalls occur
	  we can
	  leave barrier and do other work. This was not previously possible
	  before the
	  thread numbering was changed, since it possible for the same
	  hardware worker/
	  shepherd to hit a barrier more than once. With id's embedded in
	  the thread
	  this is not possible.

2011-02-22 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid warning

2011-02-22 22:37  Kyle Wheeler <kbwheel@sandia.gov>

	* preserve mt_sheps and rose extensions through distcheck

2011-02-22 22:37  Kyle Wheeler <kbwheel@sandia.gov>

	* dont use linux-specific apis

2011-02-22 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* include omp_defines.h in dist tarballs

2011-02-22 19:50  Allan Porterfield <akp@renci.org>

	* Really implement code to allow configuration depended decision on
	  the type of
	  barrier to use
	  (qt_barrier.h) Change call type to avoid multiple include
	  problems
	  (qthread.h) make barrier type #ifdef dependent
	  and return type of qt_thread_barrier call
	  (configure.in) add QTHREAD_LOG_BARRIER
	  (qthread.c) initialize the barrier the correct way depending on
	  type

2011-02-22 19:46  Allan Porterfield <akp@renci.org>

	* Adding code to limit mallocs of loop structures inside of loops
	  --
	  reuse previous loop
	  start using QTHREAD_LOG_BARRIER to decide which barrier type to
	  use

2011-02-18 19:17  Allan Porterfield <akp@renci.org>

	* (qloop_innards.h) add start so that static scheduling can use as
	  base
	  for iteration distribution
	  (rose_xomp.h) fix static iteration distribution (loop count
	  correct
	  off of correct base) -- may still need work for
	  negative increments
	  (qloop.c) initial start field

2011-02-17 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_affinity.h

2011-02-17 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiling on the tilera

2011-02-17 16:56  Allan Porterfield <akp@renci.org>

	* minor fixes
	  
	  (rose_xomp.c) close race condition starting omp for loop
	  allow late thread to progress without executing any iterations
	  add double barrier so that we can clean up and release the loop
	  after the completion of all iterations
	  (qthread.c) set the barrier size in a parallel region to the
	  number
	  of workers (if MTS) rather than the number of shepherds

2011-02-17 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* preparing to release 1.5

2011-02-16 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* fix behavior with multithreaded shepherds

2011-02-15 20:09  Allan Porterfield <akp@renci.org>

	* (rose_somp.c) close race condition in loop initialization

2011-02-15 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* fix queue tests (id can sometimes be 0)

2011-02-15 19:47  Kyle Wheeler <kbwheel@sandia.gov>

	* officially deprecate external qthread_self(), and avoid using it
	  when possible inside the library (use qthread_internal_self()
	  when truly necessary)

2011-02-15 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* stop using qthread_self()

2011-02-15 18:26  Allan Porterfield <akp@renci.org>

	* Fix/complete rewrite of nested parallelism code -- now supports
	  two
	  flavors -- each OpenMP for loop surrounded by its own OpenMP
	  parallel
	  start(reasonably tested) -- and inner parallel loop is just an
	  iteration of the outer loop (not tested nearly as well)
	  
	  (qt_qthread_struct.h) add currunt parallel region pointer to the
	  extra
	  data structure of a thread
	  (qthread.h) add data structure for a parallel region -- contains
	  generic
	  loop pointer and barrier pointer for this region
	  thread flag values moved to include file
	  add 3 calls to create and access parallel region (calls in
	  rose_xopm.c)
	  (qt_arrive_first.h) nesting no longer needed as flag to
	  qt_global_arrive_first
	  (qt_shepherd_innards.h) add current parallel region to shepherd
	  struct
	  (rose_xomp.c) remove old nested code -- detection of nesting is
	  no longer
	  explicit and many static values not needed
	  new loop init code checks loop structure first pointed to by the
	  thread
	  and then in the argument to build independent loop structure
	  for each active loop
	  quided_loop_init rebuilt for the new nesting code and Rose
	  changing
	  to make top bound inclusive
	  (rose_log_arrivaldetector.c) simplify/remove nesting code
	  (qthread.c) add parallel region and remove staticly declared
	  barrier -- now
	  loop specific
	  mccoy thread empties is taskWaitLock on startup
	  thread flag values moved to include file
	  pack thread numbers across shepherds and then up cores
	  access functions for parallel region/barrier within it

2011-02-15 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* make threads unstealable, move thread flags into qthread_struct
	  header

2011-02-08 20:02  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) completely rebuild the code to execute ordered
	  loops -- save
	  current loop execution in loop structure and check it before
	  allowing threads to leave the XOMP_ordered_start function

2011-02-07 20:03  Allan Porterfield <akp@renci.org>

	* (threadqueues.c) stealing QTHREAD_STATE_SHEP_TERM thread make
	  termination
	  tricky -- so don't steal

2011-02-07 19:32  Allan Porterfield <akp@renci.org>

	* (qthread.c) switch compution of worker number and shepherd number
	  / add asserts

2011-02-07 15:26  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) using new worker array to keep track of which
	  iteration block
	  currently needs to be executed by this worker for static
	  scheduling
	  (qloop_innards.h) added an unspecified size worker_array to the
	  end of
	  qqloop_step_handle_s -- allocation creates extra space on the
	  end equal to the number of workers -- to be used to pass
	  worker specific loop information

2011-02-04 15:47  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) force static scheduling to use same path as other
	  types

2011-02-03 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore swap files and fix compiling issue on non-x86 boxes

2011-02-02 21:21  Allan Porterfield <akp@renci.org>

	* (qloop.h) remove dead code
	  remove unneccessary volatile from argument list
	  (qloop_innards.h) make variables 64 bits so overwrites don't
	  happen
	  change/removents for qloop_internal_computeNextBlock
	  (rose_xomp.h) add loop structure to most XOMP_*loop calls --
	  matching
	  ROSE change also must happen
	  (rose_xomp.c) cleanup
	  remove a lot of code that implemented parallel loop stack --
	  ROSE interface change information now held in a loop
	  variable passed in with the calls
	  removed the loop timing code for quided self-scheduling
	  restructured some of the XOMP_loop calls to use a common
	  implementation
	  function
	  (qloop.c) removed arguments to qloop_internal_computeNextBlock
	  removed active shepherd count from loop structure

2011-02-02 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debug printfs

2011-02-02 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* fix loop logic

2011-02-02 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* better guessing of shepherd (I think)

2011-02-02 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* allow guessing to work when environment variable is not specified

2011-02-02 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* re-arranging some stuff

2011-02-02 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debug output

2011-02-02 19:04  Kyle Wheeler <kbwheel@sandia.gov>

	* do not re-scale num workers if the number has been specified
	  already

2011-02-01 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* improving compilation on tilera (something is still fundamentally
	  broken, though)

2011-02-01 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* better support for ancient libnuma

2011-02-01 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler warnings on altix

2011-02-01 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* disable fastcontext on IA64 (Itanium) machines

2011-02-01 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* detect library for nanosleep

2011-02-01 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* improve lgrp behavior with multithreaded shepherds

2011-02-01 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* up interface number

2011-02-01 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compile issues with PGI compiler

2011-02-01 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbose debug output

2011-02-01 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* correct debug output

2011-02-01 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* improve no_affinity guessing of number of workers

2011-02-01 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* fix behavior of no_affinity, add debug statements

2011-02-01 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* whoops - last commit was backwards

2011-02-01 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* fix for old hwloc

2011-02-01 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* improve libnuma behavior with multithreaded shepherds

2011-02-01 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* correctly reset nshepherds before counting bits in all_cpus_ptr

2011-02-01 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* error detection

2011-02-01 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix build on solaris/lgrp

2011-02-01 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* support new version of solaris (2.10)

2011-02-01 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* dist files

2011-02-01 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* disable fastcontext on solaris machines

2011-02-01 16:30  Kyle Wheeler <kbwheel@sandia.gov>

	* linux build fixes

2011-02-01 15:59  Kyle Wheeler <kbwheel@sandia.gov>

	* numa should compile now (needs multithreaded shepherd work)

2011-02-01 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* lgrp fix... needs to be tested

2011-02-01 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* plpa should compile now (and do something reasonable for
	  multithreaded shepherds)

2011-02-01 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* tile should compile now (and reject multithreaded shepherds)

2011-02-01 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* renaming to match new convention

2011-02-01 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* making the naming consistent and sensible

2011-02-01 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* fix mach topology to match prototypes (sync with hwloc)

2011-02-01 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed no_affinity; need to fix
	  mach/tile/plpa/lgrp/libnuma/libnumaV2

2011-02-01 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* reworked affinity to be MUCH cleaner and more portable. hwloc
	  implementation now supports multithreaded shepherds correctly (I
	  think), obviating the need for raw (non-portable)
	  sched_setaffinity calls; other topology options need
	  multithreaded love too, but maybe later

2011-01-25 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* modify behavior along the lines suggested by Allan

2011-01-25 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* remove printfs

2011-01-25 00:05  Kyle Wheeler <kbwheel@sandia.gov>

	* update to new api

2011-01-24 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* cleanup of arg copying; its now an official (internal) function,
	  rather than split across several files with multiple
	  (unnecessary) arguments

2011-01-24 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiling with debug turned on

2011-01-24 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_loopr_f no longer has a qthread_t argument

2011-01-24 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_loop_f no longer has a qthread_t argument

2011-01-24 19:13  Allan Porterfield <akp@renci.org>

	* (qloop.h) remove arguments from ROSE version of qt_loop_step_f)
	  -- only
	  uses first arg in XOMP calls
	  (qt_shepherd_innards.h) make number of workers dynamically
	  allocated
	  (threadqueues.c) use lock type that compiles
	  (rose_xomp.c) dynamically allocate a bunch of internals as prep
	  for running
	  on more than 64 threads
	  rework loop code for MTS -- rewrite when Rose fixed to pass
	  structure
	  remove some qthread_t (me's) that have been eliminated elsewhere
	  (qthread.c) cleanup
	  remove warning when moving a thread -- will be fixed and
	  reinserted
	  dynamically allocate workers
	  (qloop.c) only use the one variable XOMP calls expect
	  add _to back to future_fork_syncvar since it doesn't exist
	  add _to back to qthread_fork_syncvar since arguments are
	  different

2011-01-24 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* cleanup from rarely used code

2011-01-24 18:58  Kyle Wheeler <kbwheel@sandia.gov>

	* future functions no longer have a qthread_t argument

2011-01-24 18:47  Kyle Wheeler <kbwheel@sandia.gov>

	* feb_barrier functions no longer have a qthread_t argument

2011-01-24 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qdqueue functions no longer have a qthread_t argument

2011-01-24 18:30  Kyle Wheeler <kbwheel@sandia.gov>

	* qlfqueue functions no longer have a qthread_t argument

2011-01-24 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qpool functions no longer have a qthread_t argument

2011-01-21 23:45  Kyle Wheeler <kbwheel@sandia.gov>

	* fix external fork with multithreaded shepherds

2011-01-21 23:38  Kyle Wheeler <kbwheel@sandia.gov>

	* propogate API changes to ROSE code

2011-01-21 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* propogate API changes to benchmarking code

2011-01-21 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread FEB functions no longer require a qthread_t argument

2011-01-21 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_syncvar_* functions no longer require a qthread_t
	  argument

2011-01-21 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_syncvar_incrF no longer require a qthread_t argument

2011-01-21 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_lock/unlock no longer require a qthread_t argument

2011-01-21 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_sorted_sheps no longer requires a qthread_t argument

2011-01-21 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_shep_ok no longer requires a qthread_t argument

2011-01-21 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_retloc no longer requires a qthread_t argument

2011-01-21 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_stackleft no longer requires a qthread_t argument

2011-01-21 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_shep no longer requires a qthread_t argument

2011-01-21 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_id no longer requires a qthread_t argument

2011-01-21 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_migrate_to no longer requires a qthread_t argument

2011-01-21 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* remove deprecated functions

2011-01-21 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_yield no longer requires a qthread_t argument

2011-01-21 21:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_f no longer takes a qthread_t argument; this should begin
	  to simplify things for ROSE

2011-01-21 20:44  Allan Porterfield <akp@renci.org>

	* (threadqueues.c) My compile need stdio.h -- should bug anyone
	  else

2011-01-21 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* resolve the shep0 issue

2011-01-21 19:42  Kyle Wheeler <kbwheel@sandia.gov>

	* move threadqueues to their own file

2011-01-21 18:39  Allan Porterfield <akp@renci.org>

	* allow building with MTS
	  (qt_shepherd_innards.h) move qthread_worker_t definition before
	  use
	  (qthreads.c) move qthread_worker_t definition to include file
	  before use
	  remove static from externally (to qthread.c) visible functions

2011-01-21 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* remove some unused code

2011-01-21 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* split syncvars into their own file

2011-01-21 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* please stop committing code that won't compile (with or without
	  ROSE)

2011-01-21 16:36  Allan Porterfield <akp@renci.org>

	* (qloop.c) remove unused function (and associated warnings)

2011-01-21 16:25  Allan Porterfield <akp@renci.org>

	* Checkin to remove warnings and improvement to steal profiling
	  Also changed worker id -- may handle MTS barriers/arrive_first
	  better
	  (qthread.h) add 4 external functions added to qthread.c for omp
	  support
	  (omp_defines.h) new file -- prototypes of OMP calls supplied by
	  Qthreads
	  (qt_arrive_first.h) add external calls for arrive first tree
	  (second
	  pass needed to correct names here and at use)
	  (rose_xomp.c) prototype and cast away a lot of warnings
	  print steal info in XOMP_terminate
	  (rose_log_arrivaldetector.c) prototype and cast away a lot of
	  warnings
	  a little code cleanup and rearrangement
	  (qthread.c) prototype and cast away a lot of warnings
	  a little code cleanup and rearrangement
	  improve steal profiling to give Stephen numbers he wants
	  add function to print steal info
	  changed worker id -- may handle MTS barriers/arrive_first better
	  (qloop.c) changed task initial assignment to do mod internally --
	  allows
	  better handle of MTS barriers

2011-01-19 18:32  Allan Porterfield <akp@renci.org>

	* (configure.in) add --enable-steal-profile so that the
	  effectiveness
	  of stealing can be studied
	  (qthread.c) added a number of fprintfs and counter increments to
	  study
	  what is really happening during an application by the
	  stealing code (not final - but wanted to separate from
	  next piece of work which will be in same file)

2011-01-18 21:43  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) fix RDTSC to interact with multithreaded shepherds
	  (MTS)
	  correctly
	  add code (#ifdefed out for the time being) to search for a task
	  before it is waited on to make sure someone is executing
	  it -- if not junp to it -- on todo list
	  (qthreads.c) separate rdata initialization into its own function
	  -- may want
	  to use it to start tasks from middle of queue
	  spell fix on thief_shepherd
	  code cleanup/closer to my wierd perferencs for if trees
	  add qt_threadqueue_dequeue_specific to find specific value on
	  queue and remove it -- not currently used
	  add qthread_run_needed_task to run previous task -- not currently
	  used

2011-01-13 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* file needed to be included in the dist

2011-01-13 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* test external forks (important for Chapel)

2011-01-13 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* allow non-shepherds to spawn again

2011-01-11 23:57  Kyle Wheeler <kbwheel@sandia.gov>

	* more paranoia asserts, and fix portability issues with the
	  syncvar unlocking

2011-01-10 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore syncvar programs

2011-01-10 19:25  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a few more race conditions in syncvars

2011-01-10 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* behave better without memset

2011-01-10 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* use the generic type conversion utilities, match comments with
	  Chapel

2011-01-10 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* support data conversions for syncvar_t's

2011-01-10 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* match Chapel initial value

2011-01-10 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* match Chapel code more exactly

2011-01-10 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* new syncvar test to match Chapel prodCons.chpl code...
	  unfortunately, it seems to work fine

2011-01-10 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* unused variable

2011-01-06 20:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fix unpooled execution

2011-01-06 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* easy syncvar initialization for non-static cases

2011-01-04 15:51  Kyle Wheeler <kbwheel@sandia.gov>

	* turn syncvars hash into a striped hash

2011-01-03 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* more compiler-friendly solution to the unsigned long literal
	  problem

2011-01-03 16:09  Allan Porterfield <akp@renci.org>

	* (qthread.c) the value 1 is treated as an int and the shift of 32
	  causes
	  the value to be lost. Cast to an unsigned long seems to fix the
	  problem.

2010-12-30 15:51  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce the default test length

2010-12-30 15:08  Allan Porterfield <akp@renci.org>

	* Misc fixes to get most of BOTS benchmark suite working
	  (rose_xomp.c) fix bug in guided loop init that allowed threads
	  out too early
	  fix bug where wrong id used in guided loop start
	  move barrier in XOMP_loop_end to before loop cleanup
	  add OMP_in_final
	  implement omp_*_lock
	  (qthread.c) add parameter to qt_threadqueue_dequeue_blocking (for
	  multithread shepherd case) to specify whether worker is active
	  fix bug in disable worker to assign threads to shepherds
	  correctly
	  logical not bitwise and to find initial thread
	  only steal when active

2010-12-17 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* fix minor race condition in writeEF; add assertions

2010-12-17 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* wrap barrier init calls with QTHREAD_USE_ROSE_EXTENSIONS

2010-12-17 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* fix HWLOC typo

2010-12-17 03:05  Kyle Wheeler <kbwheel@sandia.gov>

	* some convenience targets

2010-12-17 03:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fix bug in stress test

2010-12-17 03:01  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the race condition Micheal Ferguson pointed out

2010-12-16 03:26  Kyle Wheeler <kbwheel@sandia.gov>

	* stress test for syncvars ... seems to be a bug in here somewhere

2010-12-16 00:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a race condition in writeEF and fix a logic error in fill
	  (only triggered when there are no waiters), and fix a few more
	  assertions

2010-12-15 20:40  Allan Porterfield <akp@renci.org>

	* Allow single shepherd single worker to work in barriers and
	  arrive_first code
	  (rose_log_arrivaldetector.c) if only one thread return true
	  use qthread_num_workers() for worker count
	  (qthread.c) fix up initialization code from previous clean up
	  (qt_barrier.c) allow barriers with only one thread to complete

2010-12-15 19:50  Kyle Wheeler <kbwheel@sandia.gov>

	* grrrr - protect multithreaded stuff with ifdefs

2010-12-15 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the assert (copy-paste error)

2010-12-15 18:08  Allan Porterfield <akp@renci.org>

	* Another too big checkin -- clean up get nested parallelsm to work
	  
	  (qthread.h) add calls to disable/enable workers, to pack worker
	  ids and
	  to get total number of active workers
	  (qthread_innards.h) add active worker count to qlib_s
	  (rose_log_arrivaldetector.h) comment and add size function
	  (rose_xomp.c) replace total shepherd count with total worker
	  count
	  where thread count needed
	  fix up current loop assignment when dealing with nested loops
	  add gate single to stop thread from leaving before everything
	  ready
	  pack thread counts when reducing the number of active threads
	  (rose_log_arrivaldetector.c) add size function
	  add barrier to prevent one thred from getting to next loop
	  before everyone reaches this one
	  (qthread.c) only allow active workers to get work (and slow
	  inactive
	  workers down)
	  apply patch to create workers after first thread is transformed
	  into shepherd 0
	  only allow real mccoy thread on worker 0
	  add disable/enable worker functions
	  use packed worker numbers where needed
	  add function to return active worker count
	  fix bug in locked queue length count
	  allow stealing of last thread (needed when the software thread
	  count == the hardware thread count)

2010-12-15 17:21  Stephen Olivier <olivier@cs.unc.edu>

	* modified omp_get_max_threads(), omp_get_num_threads(),
	  omp_get_thread_num() to be correct for multithreaded shepherds

2010-12-13 23:13  Stephen Olivier <olivier@cs.unc.edu>

	* (qthread.c) Changed scheduling to use work stealing when
	  multithreaded shepherds are enabled. Queue implementation is
	  lock-based per-shepherd queue.
	  (rose_xomp.c) Changed initial task placement to queue tasks on
	  local shepherd for work stealing. Also fixed a bug that
	  incorrectly set barriers to wait for the number of shepherds
	  instead of the number of workers.
	  We still did not apply Kyle's patch to move the creation of
	  shepherd 0 workers because we are still testing it with our test
	  codes, but hope to apply it soon.

2010-12-03 14:00  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) use worker id a bunch of places that a unique id is
	  needed(under
	  QTHREAD_MULTHREADED_SHEPHERDS ifdef
	  minor code cleanup
	  (qthread.c) reenable affinity for multithreaded shepherds
	  remove shepherd zero worker creation in init function (master
	  thread
	  has not been transform into shepherd zero yet and some wierd
	  initialization problems happen -- reenabled worker creation
	  for shepherd zero in qthread_shepherd function (after
	  master transformation)
	  changed inits to use qlib value for number of shepherd (other was
	  corrupt -- should figure out why)

2010-12-02 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2010-12-02 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* fix old libnuma code

2010-12-02 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix config.h include behavior

2010-12-02 14:05  Allan Porterfield <akp@renci.org>

	* compile fix
	  (rose_xomp.c) need to pick up the configuration before qthreads.h
	  (it doesn't
	  seem to be done inside that include)

2010-12-01 23:39  Kyle Wheeler <kbwheel@sandia.gov>

	* better hwloc support; preparing for API change in hwloc v1.1

2010-12-01 23:37  Kyle Wheeler <kbwheel@sandia.gov>

	* prefer hwloc to mach, now that its been fixed

2010-12-01 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* attempt to use hwloc intelligently; remove compiler warnings in
	  qthread_worker()

2010-12-01 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* revert typo created by r1712

2010-12-01 22:08  Allan Porterfield <akp@renci.org>

	* missed include def
	  (qthread.h) add qthread_worker call

2010-12-01 22:03  Allan Porterfield <akp@renci.org>

	* change to fix performance problem with dynamic loop scheduling
	  (rose_xomp.c) add and use rdtsc function to access cycle counter
	  function
	  change barrier like functions to use worker number not shepherd
	  number
	  switch dynamic scheduling to quided until Rose fixed
	  (rose_log_arrivaldetector.c) thread count needs to account for
	  workers not
	  only shepherds
	  (qthread.c) account for workers not only shepherds
	  add qthread_worker call
	  (qloop.c) change quided scheduling to use rdtsc function output
	  (qt_barrier.c) account for workers not only shepherds

2010-12-01 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* separate multithreaded shepherds from rose extensions

2010-12-01 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* old assertion

2010-12-01 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo in multithreaded shepherd enabling

2010-11-29 16:43  Allan Porterfield <akp@renci.org>

	* (configure.in) add two options
	  1) HPCToolkit support - markers to stop stackunwind
	  2) Multithreaded shepherds separated from Rose support
	  -- only sets up the #def -- Stephen needs to use it
	  (qthread.c) put markers in qthread_wrapper to stop HPCToolkit
	  unwind
	  add function to make the markers visable
	  (qloop.c) put markers in qthreads_step_wrapper to stop HPCToolkit
	  unwind
	  add function to make the markers visable

2010-11-29 15:54  Allan Porterfield <akp@renci.org>

	* (rose_xomp.c) Fix race condition on each tasks list of generated
	  tasks(add lock)
	  (qthread.c) Add unnecessary () to make if easy to read
	  (qthread.c) If negative arg length -- treat like no arg list
	  (qt_mpool.c) Fix race contition allocating new block -- the read
	  of base
	  and the read of current offset need to agree. Add lock to prevent
	  changing the base and cur from being interleaved with reading the
	  values.

2010-11-26 01:27  stephenolivier@gmail.com

	* Added multithreaded shepherd support

2010-11-16 13:09  Kyle Wheeler <kbwheel@sandia.gov>

	* chunked needs to be more strict; no optimizing by violating
	  chunksize!

2010-11-15 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* test all the different varieties of queue loop

2010-11-15 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* implement CHUNKED queue loops, allow the chunksize to be
	  specified by the user

2010-11-15 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* minor cleanup

2010-11-14 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to reduce the compiler warnings about aliasing

2010-11-14 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* remove node and lock from qt_mpool, since neither are used
	  anymore; also remove some spurious compiler warnings about
	  aliasing

2010-11-12 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* remove strict aliasing complaints

2010-11-12 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* finish correcting behavior on 32-bit platforms; swap is now more
	  formal-looking

2010-11-11 16:11  Kyle Wheeler <kbwheel@sandia.gov>

	* the x87 control word needs to be preserved on 32-bit systems as
	  well

2010-11-11 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* fix behavior on 32-bit platforms

2010-11-10 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* save x87 control and SSE2 control correctly on x86_64; add some
	  prefetching that seems to slightly improve performance

2010-11-09 22:37  AllanPorterfield@gmail.com

	* fix initialization --- short form causes OMP taskwait to hang
	  remove double barrier -- no longer needed -- don't need to reset
	  forCount within barrier

2010-11-09 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* make it compile after resolving Allans changes

2010-11-09 21:26  AllanPorterfield@gmail.com

	* but some of forCount code back
	  but remove resets in barrier

2010-11-09 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* initialize ROSE rdata

2010-11-09 20:29  AllanPorterfield@gmail.com

	* test

2010-11-09 19:22  Kyle Wheeler <kbwheel@sandia.gov>

	* lighter-weight 64-bit context swap, fixing bugs in 32-bit context
	  swap (now it sometimes works again!)

2010-11-09 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* remove 32-bit compiler warning

2010-11-09 00:12  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid using locks when allocating from the big block

2010-11-08 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI portability

2010-11-08 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce the size of the qthread_t and push all runtime-type data
	  out to be allocated at exec time, thus reducing the footprint of
	  zillions of un-run threads and reducing the cost of a threadspawn

2010-11-08 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* make the context part of the rdata structure

2010-11-08 20:12  Kyle Wheeler <kbwheel@sandia.gov>

	* re-arranging access to the qthreads data structure, preparing to
	  separate runtime-only data into a runtime-allocated structure

2010-11-02 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* rearrange qthread_s to improve memory performance, use
	  prefetching, avoid unnecessary qlib references in qthread_empty()

2010-11-02 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* support prefetching

2010-11-02 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* check for __builtin_prefetch

2010-10-29 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* syncvar static empty initializer

2010-10-29 15:00  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2010-10-29 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* more portability

2010-10-29 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* fix HWLOC behavior when num shepherds is nonzero

2010-10-29 14:33  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce allocation overhead by merging ucontext_t into qthread_t

2010-10-29 14:31  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warning

2010-10-29 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* better benchmark results

2010-10-27 05:45  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2010-10-27 05:37  Kyle Wheeler <kbwheel@sandia.gov>

	* update documentation

2010-10-27 05:37  Kyle Wheeler <kbwheel@sandia.gov>

	* use deprecated

2010-10-27 05:36  Kyle Wheeler <kbwheel@sandia.gov>

	* detect deprecated attribute

2010-10-25 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* bugfix from Allan

2010-10-25 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* reverse default on fastcontext

2010-10-25 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* fix test for new num_shepherds semantics

2010-10-25 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* minor warning fix

2010-10-25 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* updates from Allan

2010-10-25 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* updates from Allan; also moving toward using qthread_readstate
	  more broadly

2010-10-25 14:27  Kyle Wheeler <kbwheel@sandia.gov>

	* fixes from Allan

2010-10-20 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* chapel fun

2010-10-06 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to fix behavior within cpu subsets

2010-10-06 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* benchmark syncvar threads, and prime it to avoid memory issues

2010-10-05 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* ignores

2010-10-05 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* experimental code for syncvars (way more expensive than it should
	  be for some reason...)

2010-10-05 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* remove timer-progs argument

2010-10-05 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* threading timing

2010-10-05 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid relying on struct layout for correctness

2010-10-05 16:15  Kyle Wheeler <kbwheel@sandia.gov>

	* fix quoting for portability

2010-09-27 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* disable setrlimit by default on ALL platforms

2010-09-20 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* syncvar incrF (ignores state, but leaves the syncvar full, much
	  like writeF)

2010-09-20 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* better fastrand

2010-09-17 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* fix bug

2010-09-17 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* diffracting trees (from Simon Kahan)

2010-09-17 22:19  Kyle Wheeler <kbwheel@sandia.gov>

	* fast random based on time

2010-09-09 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* make time_swap work

2010-09-09 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* slim, trim x86 context swapping

2010-09-09 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* slim, trim x86_64 context swapping

2010-09-08 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* allow handwritten context swapping to work on machines with
	  working swapcontext, because the handwritten one is faster
	  (doesnt make syscalls)

2010-09-08 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* make #defs more readable, add possibility of using on linux x86
	  and others

2010-08-24 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* comment

2010-08-24 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* syncvar logic error fix from Allan

2010-08-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid copying the mutex

2010-08-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* use symbolic names instead of literals

2010-08-18 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* oops

2010-08-18 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* too eager to fill the syncvar

2010-08-16 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* fix syncvar writeEF

2010-08-05 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fix rets leak

2010-08-05 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* whoops - need calloc to ensure that hash values are properly
	  initialized

2010-08-03 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler warning

2010-08-03 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* portability to other memalign regimes

2010-08-03 22:20  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2010-08-03 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* finally got rid of cprops and judy and replaced with a builtin,
	  cache-aware hash table

2010-07-29 02:14  Kyle Wheeler <kbwheel@sandia.gov>

	* support for Judy trees as the qt_hash backend

2010-07-29 02:12  Kyle Wheeler <kbwheel@sandia.gov>

	* more TODOs

2010-07-29 02:11  Kyle Wheeler <kbwheel@sandia.gov>

	* fix api behavior

2010-07-23 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* back to devel

2010-07-23 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* use an assert to detect barrier abuse

2010-07-23 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* fix syncvar fill/empty functions to handle corner cases correctly

2010-07-23 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* fix race condition in feb barrier

2010-07-22 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* fix C++ header inclusion

2010-07-21 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* move fork_syncvar_future_to so that it doesnt show up on the sst

2010-07-21 22:50  Kyle Wheeler <kbwheel@sandia.gov>

	* support syncvars

2010-07-21 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* move pooled memory decision to after dependencies

2010-07-21 22:48  Kyle Wheeler <kbwheel@sandia.gov>

	* match new SST layout

2010-07-21 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to use SST FEB primitives in non-native mode...
	  thereby creating semi-non-native mode

2010-07-20 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, typo

2010-07-20 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* contextlib not built separately

2010-07-20 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.4

2010-07-20 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* fix ignores

2010-07-20 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* remove accidental semicolon

2010-06-29 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fix variable typo; add ability to force detection (i.e. for
	  cross-compiling)

2010-06-29 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings in cprops case

2010-06-29 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* make testincr into test_incr (and friends)

2010-06-28 20:44  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo in ifndef

2010-06-28 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* use correct function name

2010-06-28 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* reverted some qloop API changes so as to not break MTGL
	  compatibility, and separated qqloop_handle_t from the rose
	  interface (since they dont actually overlap yet)

2010-06-24 20:37  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2010-06-24 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* enable a more parallel build

2010-06-22 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* updates per Allan's request

2010-06-17 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* include qloop_innards.h

2010-06-16 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* import updates from Allan

2010-06-16 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* cleanup callbacks to make reinit safe when using such things
	  (only applies to feb barrier at the moment)

2010-06-16 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_feb_barrier needs a one-time initialization

2010-06-16 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* incr functions take same-sized arguments

2010-06-16 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2010-06-16 17:09  Kyle Wheeler <kbwheel@sandia.gov>

	* push PGI fixes to all ASM

2010-06-16 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* workaround for a PGI bug

2010-06-16 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* dont depend on __tile__; use QTHREAD_TILE

2010-06-16 14:23  Kyle Wheeler <kbwheel@sandia.gov>

	* typo in PPC64 ifdef

2010-06-15 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* fix mwaitc on ppc32

2010-06-15 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* fix behavior on 32-bit hosts

2010-06-14 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* more efficient helper functions (weird bug in ppc64)

2010-06-14 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* slight correctness improvement on qutil functions

2010-06-14 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler warnings on 32-bit platforms

2010-06-14 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* setenv is preferred to putenv

2010-06-14 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix clang warning

2010-06-14 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* document qtimers

2010-06-14 17:50  Kyle Wheeler <kbwheel@sandia.gov>

	* document qarray_dist_like

2010-06-14 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* implemented qthread_fork_syncvar_future_to

2010-06-14 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, forgot this one

2010-06-14 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* convenience; qthread/qthread.h ought to be deprecated, but keep
	  it for now

2010-06-14 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* full list

2010-06-14 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* document qt_loop_queue_* stuff

2010-06-14 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* fix const

2010-06-14 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* use named constants for BUILD_UNLOCKED_SYNCVAR states, and do
	  better ENOMEM error handling in syncvar functions

2010-06-14 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* add more error possibilities (for syncvars) and fix some slightly
	  incorrect restrict pointer declarations (specifically, readFF/FE
	  *can* use the same pointer for both arguments)

2010-06-14 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar status

2010-06-14 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar readFE

2010-06-14 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar readFF

2010-06-14 15:08  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar writeF(_const)

2010-06-14 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar writeEF(_const)

2010-06-14 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* minor corrections

2010-06-14 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* document syncvar_empty/fill

2010-06-10 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI flags

2010-06-10 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* fix icc compiler warnings

2010-06-10 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the virtual declaration, and skip the static initializer bit

2010-06-10 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid static-selector compiler warnings

2010-06-07 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* fix general race condition with qloop waiting; it's only an
	  efficient solution because syncvars are so darn quick. Still need
	  to implement future_fork_syncvar_to

2010-06-03 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling for syncvar timeouts

2010-06-01 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* add __FUNCTION__ checking, as well as error out if no hash table
	  method is available

2010-05-28 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* set picky mode on SunStudio correctly, and fail if no hash table
	  method is available

2010-05-26 21:29  Kyle Wheeler <kbwheel@sandia.gov>

	* it should be CXXLD instead of CXX

2010-05-26 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* automatically adjust CCLD if using c++ hashes and compiling
	  without shared libraries

2010-05-25 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* hwloc 1.0 support

2010-05-25 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* hwloc requires globally accessible topology widget

2010-05-25 21:52  Kyle Wheeler <kbwheel@sandia.gov>

	* use +r notation rather than separate =&r and 0 arguments

2010-05-25 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* __PIC__ only reserves ebx in 32-bit builds!

2010-05-25 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* check for hwloc, and make topology library preferences more
	  sensible

2010-05-25 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* simplify

2010-05-24 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* syncvar_t c++ wrappers

2010-05-24 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* make sure syncvar.hpp compiles

2010-05-24 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* preliminary C++ support for syncvar class

2010-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* preliminary C++ support for syncvar class

2010-05-24 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* allan updates

2010-05-24 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* use the much faster syncvar_t instead of aligned_t
	  synchronization when possible

2010-05-24 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* time loop synchronization style

2010-05-24 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* do not assert(me) in readFF

2010-05-21 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* use syncvars in qt_loopaccum_balance rather than aligned_ts

2010-05-21 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* syncvar versions of fork

2010-05-20 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbosity

2010-05-20 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* better printouts

2010-05-20 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* tilera mwaitc implementation with test-and-set, also make mwaitc
	  more efficient on 64-bit-atomic-rw platforms, and fix some debug
	  statements

2010-05-19 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* use writeF_const

2010-05-19 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* quiet ANOTHER of Intel's idiotic compiler warning

2010-05-19 20:06  Kyle Wheeler <kbwheel@sandia.gov>

	* quiet Intel's idiotic compiler warning

2010-05-19 19:52  Kyle Wheeler <kbwheel@sandia.gov>

	* forgot to expire the timeout on state checks in mwaitc

2010-05-19 04:02  Kyle Wheeler <kbwheel@sandia.gov>

	* fix some compiler warnings about pointer conversion

2010-05-18 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* fix syncvar readFF shortcut

2010-05-18 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* limits.h

2010-05-18 20:53  Kyle Wheeler <kbwheel@sandia.gov>

	* optimistic syncvar read-only operations

2010-05-18 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* make syncvar_status match feb_status semantics

2010-05-18 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* match new qloop semantics

2010-05-18 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* add time_febs to measure the difference between using syncvars
	  and using aligned_ts

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* test syncvar stuff

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* remove forced verbosity

2010-05-18 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* continue standardizing qthread_debug calls, add syncval idea

2010-05-18 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* begin standardizing qthread_debug output

2010-05-18 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* bugfixes from allan

2010-05-18 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* extra assert

2010-05-18 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* check bitfield ordering

2010-05-18 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* update copyright

2010-05-18 14:26  Kyle Wheeler <kbwheel@sandia.gov>

	* detect variadic macro styles

2010-05-18 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* detect variadic macro styles

2010-05-18 14:25  Kyle Wheeler <kbwheel@sandia.gov>

	* improved version generation

2010-04-29 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* a bit more verbosity and other sst-related fixes

2010-04-29 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* sst behavior convenience

2010-04-29 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings

2010-04-29 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* sync with master

2010-04-28 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* need cprops in SST context too

2010-04-28 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2010-04-26 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid unintentional bitwidth downgrade

2010-04-26 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* REALLY_VERBOSE

2010-04-26 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* check for verbose

2010-04-26 15:52  Kyle Wheeler <kbwheel@sandia.gov>

	* fix race condition on freeing rets, without sacrificing
	  efficiency

2010-04-26 15:49  Kyle Wheeler <kbwheel@sandia.gov>

	* separate barrier from for-loops

2010-04-26 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* remove ICC ROSE warnings

2010-04-26 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* fix bugs that Allan found

2010-04-26 14:54  Kyle Wheeler <kbwheel@sandia.gov>

	* remove ICC warnings

2010-04-22 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* reformatting

2010-04-22 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* need qtimer for normal build now

2010-04-22 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* created a new type of queue loop (TIMED) based on Allans work;
	  made runtime loop type switching possible

2010-04-22 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* more changes from allan, adding step values to the queue loops
	  (currently only a step of 1 is supported)

2010-04-22 15:23  Kyle Wheeler <kbwheel@sandia.gov>

	* more changes from allan, adding step values to the queue loops
	  (currently only a step of 1 is supported)

2010-04-22 15:01  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid assert fails on low shepherd counts

2010-04-22 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbose debug info

2010-04-22 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* remove memory leak

2010-04-22 14:55  Kyle Wheeler <kbwheel@sandia.gov>

	* allow for zero (or apparently-zero) call time

2010-04-22 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* handle low shepherd numbers safely

2010-04-22 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbose

2010-04-21 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* use builtin CAS if available on Sparc64 for increment

2010-04-21 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* ROSE now handles correct num_shepherds values

2010-04-21 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* static declarations

2010-04-21 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* no static initializer

2010-04-21 16:31  Kyle Wheeler <kbwheel@sandia.gov>

	* match allans interface

2010-04-21 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* static initializers for FASTLOCKS

2010-04-21 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* use FASTLOCKs instead of home-made cas-based lock; this way is
	  more reliable, but long term we want to get rid of the locking
	  here altogether

2010-04-21 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* compiles cleanly

2010-04-21 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* more changes from allan to fix lower-bound problem

2010-04-20 14:59  Kyle Wheeler <kbwheel@sandia.gov>

	* support ROSE in header

2010-04-20 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* update to Allans new code (from paper)

2010-04-20 14:57  Kyle Wheeler <kbwheel@sandia.gov>

	* changes from Allan to the loop barrier (maybe it works now?)

2010-04-08 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* detect TileCC; also move GNU test to the end, since so many of
	  these blasted compilers pretend to be the GNU compiler

2010-04-08 14:45  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unreachable break

2010-04-08 14:44  Kyle Wheeler <kbwheel@sandia.gov>

	* handle needSync argument to qt_hash_create() correctly

2010-04-05 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler warnings on non-Suns

2010-04-05 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* remove a few more warnings from icc

2010-04-05 16:14  Kyle Wheeler <kbwheel@sandia.gov>

	* fix gcc warnings about function declarations

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* handle needSync argument to _create()

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* add _PTR versions of FASTLOCK macros, for convenience

2010-04-05 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* remove gcc warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* remove gcc warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* remove gcc warnings about prototypes

2010-04-05 16:03  Kyle Wheeler <kbwheel@sandia.gov>

	* developer default for enable-picky; also report libnumaV1 or V2

2010-04-05 15:04  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore icc remark about constant selector

2010-04-05 15:02  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore icc error

2010-04-05 14:56  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2010-04-05 14:53  Kyle Wheeler <kbwheel@sandia.gov>

	* mark guided as unused (for now) to quiet icc

2010-04-05 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2010-04-05 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* explicitly convert log() results to quite icc

2010-04-05 14:49  Kyle Wheeler <kbwheel@sandia.gov>

	* explicitly convert ceil results to quite icc

2010-04-02 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* handle really ancient versions of libnuma

2010-04-02 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* update ignores

2010-04-02 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* update ignores

2010-04-02 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* better qtimer test

2010-04-01 18:56  Kyle Wheeler <kbwheel@sandia.gov>

	* numa_set_interleave_mask is broken, and I noted my observation
	  about numa_max_node(); come to think of it, this now handles
	  CPU-less nodes

2010-04-01 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed bug in new libnuma node allocation

2010-04-01 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* new way to allocate libnuma nodes that deals with heterogeneity
	  (3leaf)

2010-04-01 14:22  Kyle Wheeler <kbwheel@sandia.gov>

	* fflush test name so we know what we're up to

2010-04-01 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* factored is better

2010-04-01 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed output formatting of new tests

2010-03-31 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the "Balanced competing loop" to do what I thought it was
	  doing, and added the Streaming loops to test what BCL used to be
	  testing

2010-03-30 20:39  Kyle Wheeler <kbwheel@sandia.gov>

	* guided fixes

2010-03-30 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* better end-of-loop handling in factored queue

2010-03-30 17:11  Kyle Wheeler <kbwheel@sandia.gov>

	* single-shep shortcut in loop scheduling

2010-03-29 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* what was I thinking? queue_run handles the object deletion
	  already

2010-03-29 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* free shep0 total_time timer

2010-03-29 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* C++ casting

2010-03-29 18:30  Kyle Wheeler <kbwheel@sandia.gov>

	* function to destroy loop handles

2010-03-29 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* function to destroy loop handles

2010-03-24 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* test loop queues

2010-03-24 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* guided/factored self-scheduling in loop queues

2010-03-18 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* keep ilnb wrapper private

2010-03-17 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore Makefile.in

2010-03-17 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* move public data structures into ds directory

2010-03-17 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* move allpairs and wavefront into their own subdirectory

2010-03-11 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* minor debug output improvement

2010-03-11 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* properly handle rets

2010-03-11 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* threadqueue assumes calloc'd data

2010-03-11 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* free rets array

2010-03-11 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* rename testid to test_id for consistency

2010-03-11 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* better handling of mccoy_thread memory

2010-03-11 18:03  Kyle Wheeler <kbwheel@sandia.gov>

	* be more efficient when calculating unique address totals

2010-03-11 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* behave when using UNPOOLED

2010-03-11 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* compute average concurrency

2010-03-10 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, fix non-profiling stuff

2010-03-10 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* add valgrind support to protect DIST location markers, add
	  nonblocking iter_loop wrapper, make loopaccum use a heuristic to
	  avoid spawning threads to all shepherds on small ranges, fix
	  memory leak, add more error checks to set_shepof

2010-03-10 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* enable forced printout

2010-03-10 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed up the profiling code; removed the FIXME warning by fixing
	  the shep0 issue

2010-03-09 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* C++ compatibility

2010-03-03 22:07  dstark

	* bad math in loopaccum

2010-03-03 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* moved the paren

2010-03-03 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* QTHREAD_CASLOCK2 for initializing

2010-03-03 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* handle moved qtimer.h

2010-03-03 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* moved qtimer.h

2010-03-03 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* handle unpooled memory

2010-03-03 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* egads... (ROSE)

2010-03-03 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* weird ROSE change to num shepherds reporting

2010-03-03 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* log barrier only works with rose extensions at the moment

2010-03-03 19:58  Kyle Wheeler <kbwheel@sandia.gov>

	* FEB barrier is public (because I understand it)

2010-03-03 19:57  Kyle Wheeler <kbwheel@sandia.gov>

	* AKP updates

2010-03-03 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* safety

2010-03-03 19:28  Kyle Wheeler <kbwheel@sandia.gov>

	* test log barrier (BROKEN)

2010-03-03 19:25  Kyle Wheeler <kbwheel@sandia.gov>

	* make the barrier interfaces similar

2010-03-03 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* remove warning

2010-03-03 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* oops

2010-03-03 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* feb test does timing now too

2010-03-03 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2010-03-03 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* rename feb barrier header

2010-03-03 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* FEB barrier is now public

2010-03-03 19:05  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debug printf

2010-03-03 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* fix boundary condition in loopaccum

2010-03-01 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* use compiler detection for -restrict flag

2010-03-01 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* make qtimer interface more consistent with other qthread
	  functions

2010-03-01 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* make qtimer always available

2010-03-01 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* make qtimer always available

2010-03-01 18:37  Kyle Wheeler <kbwheel@sandia.gov>

	* make qtimer always available

2010-02-25 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* set up reconfigure dependencies

2010-02-25 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* cant check news anymore

2010-02-25 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix configure generation to handle dynamic version number

2010-02-25 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* better svn revision detection; use different behavior if there
	  isnt a b at the end of the version

2010-02-25 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* better version generation; automatically detect releases based on
	  NEWS file

2010-02-25 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* feb barrier

2010-02-25 20:26  Kyle Wheeler <kbwheel@sandia.gov>

	* generate package version programmatically

2010-02-25 15:19  Kyle Wheeler <kbwheel@sandia.gov>

	* update constants

2010-02-25 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* update constants

2010-02-24 23:45  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray_dist_like(), first pass

2010-02-24 22:21  Kyle Wheeler <kbwheel@sandia.gov>

	* example 2

2010-02-24 22:21  Kyle Wheeler <kbwheel@sandia.gov>

	* for getenv

2010-02-24 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* new test for qarray iter_loopaccum

2010-02-24 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace reformatting

2010-02-24 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* forgot to pass accumulator argument

2010-02-23 19:58  dstark

	* Updates DIST_REG_FIELDS and DIST_REG_STRIPES to DIST_FIELDS and
	  DIST_STRIPES, respectively.

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* rename DIST_REG*

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* rename DIST_REG*

2010-02-23 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* update docs for new qarray behavior

2010-02-23 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray_set_shepof()

2010-02-23 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* spinlocks with qthread_yield() makes this debug info really
	  annoying

2010-02-23 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* more useful assertions

2010-02-23 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the FIXED_FIELDS math (which was completely bogus if
	  num_segments wasnt evenly divisible by num_shepherds), started on
	  qarray_set_shepof()

2010-02-22 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* change else to assert

2010-02-22 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* remove icc warnings

2010-02-22 20:12  Kyle Wheeler <kbwheel@sandia.gov>

	* FIXED_FIELDS

2010-02-22 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* added vim folds

2010-02-22 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* not quite so inconceivable that the shepherd count would be huge
	  now

2010-02-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* FIXED_FIELD and qarray accumulator definitions

2010-02-22 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* add FIXED_FIELDS test, restore full testing

2010-02-22 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* create FIXED_FIELDS distribution type; also fix ALL_RAND problem
	  (basically, a typo that became a logic error)

2010-02-20 00:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix dincr on ppc32

2010-02-20 00:09  Kyle Wheeler <kbwheel@sandia.gov>

	* ppc64 implementation of cas

2010-02-20 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* do a better job of working around the broken swapcontext
	  implementation on MacOSX

2010-02-18 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray_iter_loopaccum

2010-02-18 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2010-02-18 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid floating point in debug print

2010-02-18 15:30  Kyle Wheeler <kbwheel@sandia.gov>

	* fix concurrentthreads_lock issue (bug found by David Evensky)

2010-02-16 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.3.1

2010-02-16 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* unify the qt_loop* interfaces

2010-02-16 22:29  Kyle Wheeler <kbwheel@sandia.gov>

	* use QTHREAD_SST_PRIMITIVES, and note that the while loops in
	  qthread_debug were just asking for trouble

2010-02-16 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* unify the qt_loop* interfaces

2010-02-16 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* unify the qt_loop* interfaces

2010-02-16 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* document version info stuff

2010-02-15 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* comment change

2010-02-15 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* minor tweaks for SST

2010-02-15 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* move to QTHREAD_SST_PRIMITIVES to allow unix-like behavior in the
	  SST

2010-02-15 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix config file distribution inclusion

2010-02-09 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* updates for new SST

2010-02-09 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* apparently restrict is hard to use in typedefs

2010-02-09 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* default; only test the basic operation

2010-02-09 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* clean up global barrier

2010-02-09 17:12  Kyle Wheeler <kbwheel@sandia.gov>

	* only check atomics if we haven't explicitly disabled them

2010-02-09 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* cprops doesnt care for the restrict keyword

2010-02-09 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_barrier initial commit (slightly modified from Allan's source)

2010-02-09 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* test_wavefront has issues

2010-02-09 15:18  Kyle Wheeler <kbwheel@sandia.gov>

	* roll back previous change... prevents compile

2010-02-09 15:12  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2010-02-08 23:48  Kyle Wheeler <kbwheel@sandia.gov>

	* remove dead code

2010-02-08 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce default workload

2010-02-08 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* fix GCC compiler warnings about dead code

2010-02-08 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2010-02-08 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2010-02-08 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Intel warnings

2010-02-08 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* export new qqloop functions

2010-02-08 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* removing ICC warnings

2010-02-08 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* C++ doesn't need the strict-aliasing exception (yet?)

2010-02-08 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* removing ICC warnings

2010-02-08 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* copy/paste typo

2010-02-08 18:09  Kyle Wheeler <kbwheel@sandia.gov>

	* CXXFLAGS was not being properly restored after ext/hash check

2010-02-08 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* many compilers use EDG front-end; so move it to the end of the
	  tests

2010-02-08 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* Fix the unknown-cxx issue

2010-02-08 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* Intel's compiler pretends to be GNU

2010-02-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* better picky flag detection

2010-02-08 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* preparing for 1.3.1

2010-02-08 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* removing icc warnings

2010-02-08 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* remove icc compiler warnings

2010-02-08 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* remove icc compiler warnings

2010-02-08 16:00  Kyle Wheeler <kbwheel@sandia.gov>

	* remove icc compiler warnings

2010-02-08 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* remove icc compiler warnings

2010-02-08 15:39  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings

2010-02-08 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* remove dead code

2010-02-08 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* unused variable

2010-02-05 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore htmlized output

2010-02-05 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* detect missing rman

2010-02-05 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2010-02-05 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* document qthread_shep_ok

2010-02-05 19:11  Kyle Wheeler <kbwheel@sandia.gov>

	* reference qthread_initialize instead of qthread_init

2010-02-05 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* document qthread_initialize

2010-02-05 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* simplify the #defs... they were unnecessarily complex after the
	  AMD-PIC changes

2010-02-04 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* LFQNODE remnant

2010-02-04 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* rename internal lfqueue to "threadqueue" to represent its true
	  nature (as in not-necessarily lock-free)

2010-02-02 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.3

2010-02-02 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* remove empty #elif

2010-02-02 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* rename mapinfo_s structs

2010-02-02 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* AMD64 may have PIC as well <sigh>

2010-02-02 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* test fails for some optimization

2010-02-02 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* gcse flag is no longer necessary

2010-02-02 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* remove c++ compile warnings

2010-02-02 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* c++ compatibility

2010-02-02 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* make the test succeed on IA64 (not sure why it breaks, or what a
	  better way to do it might be)

2010-02-02 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* make ROSE extensions optional for now

2010-02-01 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* experimental loop work by Allan

2010-02-01 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* fiddling with removing -Wall warnings; also added some
	  (NON-PUBLIC) functions for tracking for loops for Allan (I don't
	  like them, but I haven't figured out a good way of avoiding them
	  yet).

2010-02-01 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* treat things as unsigned... just to avoid potential problems

2010-01-28 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* atomic_stripes_locks

2010-01-28 18:18  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - stupid assert

2010-01-28 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* allow selection of only certain tests

2010-01-28 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* better error checking in unpooled memory allocation

2010-01-27 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* this is goofy, but makes the compiler happy

2010-01-27 22:58  Kyle Wheeler <kbwheel@sandia.gov>

	* fix clock_gettime (found a system to test)

2010-01-27 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* new timer type: clock_gettime

2010-01-26 20:56  Kyle Wheeler <kbwheel@sandia.gov>

	* change error message

2010-01-26 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2010-01-26 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* make lock stripes variable based on number of shepherds

2010-01-26 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* missing a typedef

2010-01-26 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* test reinitialization

2010-01-26 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* arguments

2010-01-22 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* fix off-by-one error in disabling shepherds

2010-01-22 20:35  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid spurious failures in parallel environments

2010-01-22 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* updated ignores

2010-01-22 20:05  Kyle Wheeler <kbwheel@sandia.gov>

	* more thorough id checking

2010-01-22 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test for ssflags in a slightly cleaner fashion

2010-01-22 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* enable silent rules

2010-01-21 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* faster mutex-based CAS operations

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* faster mutex increments

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* fastlock sfnf_lock

2010-01-21 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* fastlocks in the memory pool

2010-01-21 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* faster mutex increments

2010-01-21 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* match changes in qt_hash.cpp

2010-01-21 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings

2010-01-21 18:09  Kyle Wheeler <kbwheel@sandia.gov>

	* use fastlocks for qt_hash

2010-01-21 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* remove reliance on PTHREAD_RECURSIVE

2010-01-21 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* fix double-lock bug

2010-01-21 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* make more configurable, more reliable

2010-01-21 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* only output unnecessary stats if VERBOSE=1

2010-01-21 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* rename test1 to test_qutil, reorder tests to be in increasing
	  order of complexity

2010-01-21 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* rename test2 to test_stackleft

2010-01-21 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* rename test3 to test_basic

2010-01-21 15:10  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2010-01-21 15:05  Kyle Wheeler <kbwheel@sandia.gov>

	* report when spinlocks are available

2010-01-20 23:44  Kyle Wheeler <kbwheel@sandia.gov>

	* ditch MUTEX_CAS; pointless

2010-01-20 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* fastlock operations may not have return values

2010-01-20 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* tmc_sync_mutex_t's are faster than even spinlocks on tilera, for
	  some reason

2010-01-20 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid issues if the node is undefined

2010-01-19 23:22  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debug printf

2010-01-19 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* CPU affinity and rudimentary distances on tilera

2010-01-19 23:18  Kyle Wheeler <kbwheel@sandia.gov>

	* detect tilera topology library

2010-01-19 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* warning

2010-01-19 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* dont *require* verbose

2010-01-19 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* make timer progs produce output (since tey arent run via make
	  check)

2010-01-18 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* allow VERBOSE check

2010-01-18 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings on Tilera

2010-01-18 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* more debug output

2010-01-18 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* make qt_mpool work in a non-atomic world (via the CASLOCK macros)

2010-01-18 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* need to include argparsing.h

2010-01-18 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* only init the output_lock in debug mode (obviously)

2010-01-18 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* use "me"

2010-01-18 16:26  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbosity

2010-01-18 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbosity; match testdincr

2010-01-18 16:10  Kyle Wheeler <kbwheel@sandia.gov>

	* make the output_lock a FASTLOCK

2010-01-18 16:08  Kyle Wheeler <kbwheel@sandia.gov>

	* unconditionally include pthread.h, for the FASTLOCK stuff

2010-01-18 16:00  Kyle Wheeler <kbwheel@sandia.gov>

	* better init of two-mutex queue

2010-01-18 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* missing QT_CAS macro for architectures with CAS atomics

2010-01-18 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2010-01-18 15:46  Kyle Wheeler <kbwheel@sandia.gov>

	* many changes getting it to work on tilera... not done yet. Using
	  the Maged Michael two-lock queue instead of lock-free queue for
	  speed, added support for pthread spinlocks (which for some reason
	  dont work on Tilera... maybe Im doing something wrong)

2010-01-14 23:33  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to handle CAS via mutex safely, at least internally...
	  not done yet

2010-01-14 23:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fastlock support (why broken on tilera???)

2010-01-14 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* more verbosity

2010-01-14 23:30  Kyle Wheeler <kbwheel@sandia.gov>

	* detect pthread spinlocks

2010-01-14 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* since the alignment of malloc is a finicky thing, lets avoid
	  relying on the result of that alignment test if possible (this is
	  important on systems that incorrectly generate
	  HAVE_16ALIGNED_MALLOC, such as the Tilera)

2010-01-14 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* since the alignment of malloc is a finicky thing, lets avoid
	  relying on the result of that alignment test if possible (this is
	  important on systems that incorrectly generate
	  HAVE_16ALIGNED_MALLOC, such as the Tilera)

2010-01-14 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* oops; fix typo

2010-01-14 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* more configurable

2010-01-14 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* more configurable

2010-01-14 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* remove pointless const declaration

2010-01-14 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* recognize QTHREAD_TILE

2010-01-14 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unused variable warnings

2010-01-14 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* tile cant handle iprintf for some bizarre reason

2010-01-14 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* even more verbosity, since this is such a basic test

2010-01-14 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* Tilera cache lines are always 64-byte

2010-01-14 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* wrote my own Tilera getcontext/setcontext

2010-01-14 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* rename OSX_MAKECONTEXT macros, because they are useful on non-OSX
	  platforms; also, use AC_CHECK_SIZEOF builtin autoconf macro

2010-01-14 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* detect tilera assembly

2010-01-12 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed up handling of atomics on systems without useful hardware
	  features (still work to do here... mutex-based CAS is broken)

2010-01-07 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* restore debugging #def

2010-01-07 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* updated

2010-01-07 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* more beta stuff

2010-01-04 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* restore cprops compatibility; make it possible to build an all-C
	  (static) library again

2009-12-15 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* handle sysconf errors

2009-12-15 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* support Linux's sysconf() interface for detecting number of
	  shepherds (even if we can't do affinity with them, necessarily)

2009-12-15 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* support using sysctl() to detect the number of available CPUs
	  (which is the official method for doing so on Macs)

2009-12-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* clarity: s/non-competing/independent/g

2009-12-08 17:49  Kyle Wheeler <kbwheel@sandia.gov>

	* increment benchmarks now make more sense

2009-12-08 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* better const handling to avoid warnings when compiling without
	  alignment checks

2009-12-07 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_debuglevel and an additional assert in
	  qthread_stackleft()

2009-12-07 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* more interesting test

2009-12-07 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* nicer qthread_debug function

2009-12-03 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* added a few assertions, and fixed a potential crasher (freeing a
	  null ptr)

2009-12-03 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_loop_queue stuff

2009-12-03 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* more qthread_fork() debugging output

2009-12-03 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* borked up the boundary conditions again

2009-12-02 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* tolerate redundant init calls

2009-12-02 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* AHA! make qthread_init work as expected

2009-12-02 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* remove correct-but-not-helpful const declaration

2009-12-02 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fix bound checking in a few other functions

2009-12-02 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* fix bound checking on qthread_fork_to

2009-12-01 15:58  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_shep_ok

2009-11-24 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* remove -Wall -pedantic warnings

2009-11-24 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* ansi

2009-11-24 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* remove cruft

2009-11-24 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing -Wall -pedantic errors

2009-11-24 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace and comments; make the integer check standardized

2009-11-24 20:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing -Wall -pedantic errors

2009-11-24 15:15  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unused variable

2009-11-23 23:58  Kyle Wheeler <kbwheel@sandia.gov>

	* fix race on shep0arg

2009-11-23 23:58  Kyle Wheeler <kbwheel@sandia.gov>

	* qsort implementation that doesnt use so much stack (also faster
	  than glibc qsort())

2009-11-23 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* some pretty stupid explicit casting

2009-11-23 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* add an assert to detect broken makecontext argument handling
	  (mostly, this detects an llvm bug)

2009-11-23 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* a way to force the use of manual assembly (probably a bad idea)

2009-11-23 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* un-cache header checks when rechecking alternate CXXFLAGS

2009-11-19 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings

2009-11-19 18:13  Kyle Wheeler <kbwheel@sandia.gov>

	* current summary

2009-11-19 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* properly detect qsort_r style variants

2009-11-18 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* reworked shepherd logic to make enabled/disabled paths easier to
	  follow... threads that yield on a disabled shepherd will get
	  queued twice (once locally and once when it gets forcibly
	  migrated), but thats a small price to pay for clarity

2009-11-18 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* skip the goto

2009-11-18 19:17  Kyle Wheeler <kbwheel@sandia.gov>

	* dont change wandering thread state when sending it home

2009-11-18 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* send wandering threads home if their home shepherd has been
	  reactivated

2009-11-18 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* document qthread_enable/disable_shepherd

2009-11-17 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* use a basic busy-ness estimate for handling disabled shepherds,
	  and forbid disabling shepherd 0

2009-11-17 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize formatting

2009-11-17 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize formatting

2009-11-17 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize formatting

2009-11-17 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize formatting

2009-11-17 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize formatting

2009-11-17 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* document qthread_cas and friends

2009-11-16 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid warnings on architectures without builtin CAS operations

2009-11-16 21:03  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Intel compiler warnings by removing unused goto labels

2009-11-16 21:02  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Intel compiler warnings

2009-11-16 20:01  Kyle Wheeler <kbwheel@sandia.gov>

	* make test more controllable

2009-11-16 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed memory leak specific to using libnuma

2009-11-16 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* make cdt thread-safe (remove race condition in initialization;
	  and fix-up its destruction)

2009-11-16 18:57  Kyle Wheeler <kbwheel@sandia.gov>

	* better Sun ASM support (still fighting Sun ICE)

2009-11-16 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* newv is read-only

2009-11-16 17:18  Kyle Wheeler <kbwheel@sandia.gov>

	* transform target_shepherd into a pointer, to speed a few lookups

2009-11-16 17:01  Kyle Wheeler <kbwheel@sandia.gov>

	* default to avoid cprops

2009-11-16 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to fix "restrict" brokenness

2009-11-16 16:26  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore test_cacheline

2009-11-16 16:20  Kyle Wheeler <kbwheel@sandia.gov>

	* remove complaints about distance matrix generation (they dont
	  help)

2009-11-16 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed some syntax problems that prevented detection

2009-11-14 00:21  Kyle Wheeler <kbwheel@sandia.gov>

	* release resources, avoid unnecessary affinity work in
	  single-shepherd case

2009-11-13 23:53  Kyle Wheeler <kbwheel@sandia.gov>

	* better handling of no topo library during disable/enable
	  migration

2009-11-13 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* fix up the shepherd_ptr on fork_to()

2009-11-13 23:31  Kyle Wheeler <kbwheel@sandia.gov>

	* ooops, fix typo

2009-11-13 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* threads with a second-order affinity (only established via
	  explicit programmer placement, eg via fork or migrate)

2009-11-13 23:00  Kyle Wheeler <kbwheel@sandia.gov>

	* linux has a separate, incompatible implementation of qsort_r()
	  now

2009-11-13 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* change CHECK_INTERACTIVE to CHECK_VERBOSE

2009-11-13 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* report parallelism

2009-11-13 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* change TEST_INTERACTIVE into VERBOSE

2009-11-13 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* use numa_all_cpus_ptr to work around numa_num_thread_cpus bug

2009-11-13 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* detect CPUs with libnuma... attempt to deal with (what appears to
	  be) a major bug in libnuma

2009-11-13 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* even better way of handling the timer progs

2009-11-13 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* straighten out topology interface dtection, and report it in the
	  configuration summary

2009-11-13 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* describe sheps

2009-11-13 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* self-documenting arguments

2009-11-12 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* make building tests more sane

2009-11-12 23:05  Kyle Wheeler <kbwheel@sandia.gov>

	* short-circuit for testing

2009-11-12 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* hide debug message

2009-11-12 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* first pass at enable/disable shepherds

2009-11-12 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* change the way args are handled (now uses environment variables),
	  make time tests quiet by default

2009-11-12 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* more debug output for finding the cause of qthread_initialize()
	  errors; and fixed a bad error check

2009-11-11 00:44  Kyle Wheeler <kbwheel@sandia.gov>

	* better warning in qthread_initialize

2009-11-11 00:42  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_initialize() and QTHREAD_NUM_SHEPHERDS replace
	  qthread_init()

2009-11-11 00:23  Kyle Wheeler <kbwheel@sandia.gov>

	* fix PIC code on intel compiler

2009-11-10 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* identify VirtualBox bug

2009-11-10 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* IA64 tested and corrected

2009-11-10 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* compatibility fixes, handle Intel op 4 correctly

2009-11-10 18:02  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2009-11-10 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* don't leak memory when doing lock profiling and calling
	  qthread_finalize redundantly

2009-11-10 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* correct 0x80000006 handling on AMD

2009-11-10 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* more comprehensive, vendor-specific CPUID manipulation

2009-11-10 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-11-10 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* push qthread_finalize into atexit(); no longer need to call it
	  directly.

2009-11-10 01:14  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the guard_pages display

2009-11-10 01:13  Kyle Wheeler <kbwheel@sandia.gov>

	* test cacheline

2009-11-10 00:39  Kyle Wheeler <kbwheel@sandia.gov>

	* pay attention to extended attributes correctly

2009-11-05 22:47  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid warning on 64-bit platforms

2009-11-05 22:44  Kyle Wheeler <kbwheel@sandia.gov>

	* insist upon a c++ compiler

2009-11-05 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* safer cacheline detection

2009-11-04 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* guard pages

2009-11-04 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* remove a warning

2009-11-02 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* bogus man page

2009-11-02 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* preparing documentation for 1.2 release; renamed qt_cacheline to
	  qthread_cacheline

2009-11-02 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* document environment variables

2009-10-30 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* dynamically detect cacheline size, rather than at library compile
	  time, with qt_cacheline()

2009-10-30 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* documentation for all the latest changes

2009-10-30 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* feature freeze for 1.2

2009-10-30 19:45  Kyle Wheeler <kbwheel@sandia.gov>

	* the difference between input registers and output registers is
	  that input registers are assumed not to change; if they do,
	  things can become very very broken, so ONLY use output registers
	  for "scratch" memory

2009-10-30 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* compatibility with OSX 10.4's g++, which cannot do uninitialized
	  hash iterators

2009-10-30 17:18  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, forgot to include qdqueue.h for distribution

2009-10-30 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary variables

2009-10-30 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* print progress

2009-10-30 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* make it easier to remove the ifs

2009-10-30 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* eliminate redundant CAS functions when builtin atomic functions
	  are supported

2009-10-30 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* return ret

2009-10-30 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce icc complaints

2009-10-29 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* asserts

2009-10-29 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* (avg)

2009-10-29 23:36  Kyle Wheeler <kbwheel@sandia.gov>

	* compatibility with gcc 3.4.x

2009-10-29 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* needs stdio all the time (probably bad, but...)

2009-10-29 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* inverted affinity default

2009-10-29 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* add C++ hash frontend to remove dependency on libcprops

2009-10-29 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* add C++ hash frontend to remove dependency on libcprops

2009-10-22 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* error detection in envariable parsing

2009-10-22 12:58  Kyle Wheeler <kbwheel@sandia.gov>

	* casting to avoid warnings

2009-10-20 14:37  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debugging prints

2009-10-19 23:44  Kyle Wheeler <kbwheel@sandia.gov>

	* detect 10.4

2009-10-19 23:43  Kyle Wheeler <kbwheel@sandia.gov>

	* detect 10.4

2009-09-11 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* added "interactive" cycle monitoring

2009-09-11 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary argument processing

2009-09-11 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* spin

2009-09-11 13:50  Kyle Wheeler <kbwheel@sandia.gov>

	* fix chain_bench_pthread

2009-09-10 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* chain

2009-09-10 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* cncthr and thrcrt

2009-09-10 16:05  Kyle Wheeler <kbwheel@sandia.gov>

	* lul and mutex benchmarks

2009-09-10 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* local ptr

2009-09-10 14:30  Kyle Wheeler <kbwheel@sandia.gov>

	* incr bench

2009-09-08 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* use OSX thread affinity interface

2009-09-08 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* check for OSX threading affinity interface

2009-09-08 21:45  Kyle Wheeler <kbwheel@sandia.gov>

	* use arguments, like the comments claim we do

2009-08-11 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* correct libc timing

2009-08-11 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid valgrind problems

2009-08-11 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* a bit more verbosity, and compar to libc qsort

2009-08-11 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* need a comma

2009-07-01 16:11  Kyle Wheeler <kbwheel@sandia.gov>

	* more reliable test

2009-07-01 16:06  Kyle Wheeler <kbwheel@sandia.gov>

	* removing gcc pedantic warnings

2009-07-01 15:13  Kyle Wheeler <kbwheel@sandia.gov>

	* assertion is backwards

2009-07-01 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* error return value

2009-06-30 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* remove autoconf warning about AC_USE_SYSTEM_EXTENSIONS by putting
	  it earlier

2009-06-30 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* this test is critical for porting to new platforms, so lets make
	  it a bit more verbose (in interactive mode)

2009-06-30 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler kvetching

2009-06-30 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* use the actual number of shepherds, rather than assuming we can
	  always get what we want

2009-06-30 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* just checking...

2009-06-30 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* update to newer assembly and API for C++ stuff

2009-06-30 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* remove outdated #def

2009-06-30 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-06-30 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* handle CACHELINE_BYTES for sst

2009-06-30 21:07  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling, compress valgrind notation

2009-06-30 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* remove qargnonull macro

2009-06-30 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread asserts

2009-06-30 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling, and an SST correction

2009-06-30 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling

2009-06-30 20:02  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling

2009-06-30 20:02  Kyle Wheeler <kbwheel@sandia.gov>

	* move convenient assertions that need error handling when
	  assertions are not allowed

2009-06-30 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling

2009-06-30 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* convenient assertions that need error handling when assertions
	  are not allowed

2009-06-26 04:09  Kyle Wheeler <kbwheel@sandia.gov>

	* flesh out the lock debugging messages

2009-06-26 03:35  Kyle Wheeler <kbwheel@sandia.gov>

	* rephrase debug output of yielding

2009-06-26 03:33  Kyle Wheeler <kbwheel@sandia.gov>

	* revise debug output framework, use named states to keep things
	  clear (and re-orderable)

2009-06-23 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* we have CAS now; remove comment, convert to aligned_t

2009-06-23 16:36  Kyle Wheeler <kbwheel@sandia.gov>

	* more descriptive comments

2009-06-23 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* over-saving registers in IA32; comment them out (lightly tested
	  change)

2009-06-23 00:32  Kyle Wheeler <kbwheel@sandia.gov>

	* check that shepherds identify themselves properly, and that NULL
	  shepherd identification provides the same results as shepherd
	  identification based on a qthread_t

2009-06-23 00:29  Kyle Wheeler <kbwheel@sandia.gov>

	* fix pthread_setspecific/getspecific; the value of r13 needs to be
	  set by the parent pthread, rather than be preserved and travel
	  with the qthread

2009-06-23 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* move osx_compat headers someplace sensible

2009-06-22 23:59  Kyle Wheeler <kbwheel@sandia.gov>

	* PPC64 needs bigger stacks

2009-06-22 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* omit extra semicolons to quiet finicky compilers

2009-06-22 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* printf pedantry

2009-06-22 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler warning

2009-06-22 21:15  Kyle Wheeler <kbwheel@sandia.gov>

	* changing the way I use volatile, to make icc happy

2009-06-22 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* stringent casting to make icc happy

2009-06-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* document logic for cas64

2009-06-22 19:22  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qthread_cas64 on x86, use xchg/xchg instead of pushl/popl to
	  work around PIC issues (faster, avoids using memory), and rework
	  macros to remind me that the PIC register has to be %4 to work
	  with the macros properly (that was the problem that broke
	  qthread_cas64)

2009-06-16 19:44  Kyle Wheeler <kbwheel@sandia.gov>

	* handle errors in thread affinity

2009-06-16 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* initialize all of wargs (quiet a compiler complaint)

2009-06-16 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* better ENOMEM handling

2009-06-16 18:12  Kyle Wheeler <kbwheel@sandia.gov>

	* logic error in exit condition

2009-06-16 18:00  Kyle Wheeler <kbwheel@sandia.gov>

	* more volatile access functions

2009-06-16 17:29  Kyle Wheeler <kbwheel@sandia.gov>

	* use CAS to avoid duplicate work, while allowing duplicate
	  work-units, thus simplifying things a lot

2009-06-16 15:25  Kyle Wheeler <kbwheel@sandia.gov>

	* detect/handle more malloc failures

2009-06-16 04:37  Kyle Wheeler <kbwheel@sandia.gov>

	* use a qpool for work units

2009-06-16 04:12  Kyle Wheeler <kbwheel@sandia.gov>

	* this is a giant near-unconscionable hack, but it prevents threads
	  from spinning on workunits with missing prereqs. essentially,
	  each worker holds on to unusable work units until it finds a
	  usable one (or until there arent any left), and then dumps any
	  (previously) unusable ones back into the queue for others to find

2009-06-16 03:39  Kyle Wheeler <kbwheel@sandia.gov>

	* remove small memory leak

2009-06-16 03:37  Kyle Wheeler <kbwheel@sandia.gov>

	* fix small memory leak

2009-06-16 03:12  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid calling num_shepherds() repeatedly, and avoid minor pooling
	  bug

2009-06-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* no need to recalculate QPTR(next) in qt_lfqueue dequeue process
	  every time, and this seems to make some compilers happier

2009-06-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* no need to recalculate QPTR(next) in dequeue process every time,
	  and this seems to make some compilers happier

2009-06-15 20:25  Kyle Wheeler <kbwheel@sandia.gov>

	* initialize R to avoid compiler warning

2009-06-14 07:58  Kyle Wheeler <kbwheel@sandia.gov>

	* dont need to keep reallocating local memory in workers: re-use
	  it!

2009-06-14 06:00  Kyle Wheeler <kbwheel@sandia.gov>

	* quick timer (update to new wavefront)

2009-06-14 05:51  Kyle Wheeler <kbwheel@sandia.gov>

	* remove debugging lines, and fixes a minor "access freed memory"
	  ordering bug

2009-06-14 05:38  Kyle Wheeler <kbwheel@sandia.gov>

	* new (memory efficient) approach to wavefront. being memory
	  efficient means we can compute bigger problems. bigger problems
	  means more parallelism. Needs a way to compute arbitrary [x,y] in
	  the returned lattice (shouldnt be too hard)

2009-06-14 05:35  Kyle Wheeler <kbwheel@sandia.gov>

	* no creating idiotic qarrays, even if asserts have been turned off

2009-06-11 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unused code

2009-06-11 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* minor signed-vs-unsigned comparison fixes

2009-06-11 17:28  Kyle Wheeler <kbwheel@sandia.gov>

	* consolidate gcd/lcm code

2009-06-11 16:48  Kyle Wheeler <kbwheel@sandia.gov>

	* fix debuglevel parsing

2009-06-11 16:43  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - affinity logic got confused with all the #defs

2009-06-11 16:21  Kyle Wheeler <kbwheel@sandia.gov>

	* assuming that a cache line is a multiple of sizeof(double)...
	  which it always has been so far... calculate the CHUNKSIZE
	  intelligently

2009-06-11 04:23  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiler warning

2009-06-11 04:01  Kyle Wheeler <kbwheel@sandia.gov>

	* PPC cacheline sizes, according to
	  http://developer.apple.com/technotes/tn/tn2087.html - the G4
	  (always 32-bit) has 32-byte cache lines, while the G5 (always
	  64-bit) has 128-byte cache lines

2009-06-11 03:53  Kyle Wheeler <kbwheel@sandia.gov>

	* correct the argument sizes (minor)

2009-06-11 03:28  Kyle Wheeler <kbwheel@sandia.gov>

	* removing pointless volatile casts (according to ICC)

2009-06-11 03:27  Kyle Wheeler <kbwheel@sandia.gov>

	* need CAS-32/CAS-64/CASptr in common header

2009-06-11 03:25  Kyle Wheeler <kbwheel@sandia.gov>

	* adding the volatile back... to reduce compiler warnings

2009-06-11 03:21  Kyle Wheeler <kbwheel@sandia.gov>

	* remove pointless casts

2009-06-11 03:20  Kyle Wheeler <kbwheel@sandia.gov>

	* properly test CAS varieties

2009-06-11 03:09  Kyle Wheeler <kbwheel@sandia.gov>

	* use the -restrict flag for icpc (detecting this *should* be
	  libtool's responsibility, IMHO)

2009-06-11 02:33  Kyle Wheeler <kbwheel@sandia.gov>

	* properly detect systems that CAN do a CAS-64 but whose compilers
	  dont know how

2009-06-11 01:40  Kyle Wheeler <kbwheel@sandia.gov>

	* always return a value

2009-06-10 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* remove "portability" bodge ("m"(*operand)) because PGI compiler
	  miscompiles it (it actually dereferences operand, rather than
	  just taking the address from operand); also fix a minor issue of
	  redefining QTHREAD_PIC_PREFIX

2009-06-10 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* cast arg2 of qthread_cas_ptr and qt_cas to void* to remove the
	  PGI warning

2009-06-10 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* correct the qthread_cas_ptr arg (the memory pointed to by arg
	  needs to be considered volatile... the memory pointed to by the
	  memory pointed to by arg is somewhat besides the point).

2009-06-10 21:25  Kyle Wheeler <kbwheel@sandia.gov>

	* remove pointless const declarations, and add PGI to the list of
	  special-case compilers

2009-06-10 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* correct the qt_cas ptr (the memory pointed to by ptr needs to be
	  considered volatile... the memory pointed to by the memory
	  pointed to by ptr is somewhat besides the point). Also a slight
	  modification to cmpxchg syntax... might make PGI compiler happy
	  (maybe not)

2009-06-10 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI compiler has a cpp bug such that string appends ignore
	  subsequent whitespace. A workaround (used here) is to make sure
	  that when this is important, there is always a terminating
	  string. In other words, a declaration like "struct qt##initials
	  arg;" must become "struct qt##initials##_s arg;" or else PGI will
	  treat it as if it was "struct qt##initials##arg;

2009-06-10 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* more accurate requirement description on ia32 cmpxchg8b---makes
	  PGI compiler happy. also avoid the noaffinity label and goto (was
	  kinda lame anyway)

2009-06-10 20:54  Kyle Wheeler <kbwheel@sandia.gov>

	* more accurate requirement description on ia32 cmpxchg8b---makes
	  PGI compiler happy

2009-06-09 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* fix incr/cas summary on some systems

2009-06-09 21:38  Kyle Wheeler <kbwheel@sandia.gov>

	* icc without pic... should work, but doesnt without this change
	  (why?)

2009-06-09 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* use the correct register in 64-bit IA32 CAS

2009-06-05 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* finer-grained blocking

2009-06-05 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* fix major migration bug on some platforms

2009-06-05 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* mark unused args

2009-06-05 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* mark unused args

2009-06-05 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid signed/unsigned warning

2009-06-05 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* mark unused args

2009-06-05 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary vol func

2009-06-05 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* altix cache-line

2009-06-05 00:30  Kyle Wheeler <kbwheel@sandia.gov>

	* use detected cacheline size

2009-06-05 00:30  Kyle Wheeler <kbwheel@sandia.gov>

	* detect cache line size

2009-06-04 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-06-04 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* tidying up

2009-06-04 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:17  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:15  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-06-04 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-06-04 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler bugs with volatile

2009-06-04 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* make it possible to remove ABA protection (i.e. for VALGRIND use)

2009-06-04 14:34  Kyle Wheeler <kbwheel@sandia.gov>

	* work around potentially broken compiler handling of volatile
	  keyword

2009-06-04 14:32  Kyle Wheeler <kbwheel@sandia.gov>

	* check for the noinline attribute

2009-06-03 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* trimmed

2009-06-03 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* align the chunksize

2009-06-03 20:22  Kyle Wheeler <kbwheel@sandia.gov>

	* dont use too much affinity on Niagara2 (kickass cache
	  architecture means we dont care so much about exactly which core
	  each shepherd uses)

2009-06-03 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* time qutil_qsort

2009-06-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* CAS64 doesn't exist on ppc32

2009-06-02 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* fix valgrind typo

2009-06-02 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* make it a little more interesting

2009-06-02 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* attempt to detect more tricky platforms

2009-06-02 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* VALGRIND

2009-06-02 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* VALGRIND placeholder, and a few extra pointers to make sure
	  memory can be cleaned up properly at the end

2009-06-02 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* VALGRIND macros to assist with debugging

2009-06-02 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* VALGRIND macros to assist with debugging

2009-06-02 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* VALGRIND macros, freeing some more memory, and clearing all
	  allocated LFQ nodes in an attempt to avoid problems

2009-06-02 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* interactive output

2009-05-29 19:06  Kyle Wheeler <kbwheel@sandia.gov>

	* sun things

2009-05-29 19:02  Kyle Wheeler <kbwheel@sandia.gov>

	* lots of lgrp fixes, and a fix to unpooled memory behavior

2009-05-29 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* lots of garbage left in the code, but this has much-improved
	  heuristics

2009-05-29 14:42  Kyle Wheeler <kbwheel@sandia.gov>

	* try out perfect halfway algorithm

2009-05-28 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* shep is unused without distance tracking

2009-05-28 17:03  Kyle Wheeler <kbwheel@sandia.gov>

	* cast to remove warnings on some systems

2009-05-28 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* use qthread_cas for user-side objects

2009-05-28 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* adding qthread_cas

2009-05-28 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* check result of qarray_create

2009-05-28 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qarray_create_tight

2009-05-28 03:47  Kyle Wheeler <kbwheel@sandia.gov>

	* tighter, small segments

2009-05-28 03:46  Kyle Wheeler <kbwheel@sandia.gov>

	* a few improved heuristic options

2009-05-27 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* 10x

2009-05-27 18:31  Kyle Wheeler <kbwheel@sandia.gov>

	* better exit condition

2009-05-27 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* Fix potential NULL dereference (idiot error)

2009-05-27 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* check qthread_init value

2009-05-27 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* always initialize lgrp_cookie

2009-05-27 14:58  Kyle Wheeler <kbwheel@sandia.gov>

	* membar is probably a good idea

2009-05-27 14:51  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2009-05-27 01:49  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2009-05-27 01:45  Kyle Wheeler <kbwheel@sandia.gov>

	* hamming is unnecessarily slow

2009-05-27 01:34  Kyle Wheeler <kbwheel@sandia.gov>

	* 10x

2009-05-27 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qtimer_destroy

2009-05-26 23:57  Kyle Wheeler <kbwheel@sandia.gov>

	* time wavefront

2009-05-26 23:48  Kyle Wheeler <kbwheel@sandia.gov>

	* time allpairs

2009-05-22 17:45  Kyle Wheeler <kbwheel@sandia.gov>

	* for comparison to Intel TBB

2009-05-22 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* gnu_source <sigh>

2009-05-22 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* eliminate harmless compiler warning

2009-05-22 17:40  Kyle Wheeler <kbwheel@sandia.gov>

	* no need to empty arrays

2009-05-22 17:39  Kyle Wheeler <kbwheel@sandia.gov>

	* use colprogress instead of febs to allow more parallelism

2009-05-22 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* remove verbosity in non-interactive sessions

2009-05-22 16:55  Kyle Wheeler <kbwheel@sandia.gov>

	* wavefront

2009-05-22 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* dont care about QCTR type

2009-05-22 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* minor typo and added folding

2009-05-22 16:47  Kyle Wheeler <kbwheel@sandia.gov>

	* use the QPTR stuff to avoid ABA problems (copied from qt_mpool.c)

2009-05-22 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* typo in #def

2009-05-22 16:28  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread-int.h for uintptr_t

2009-05-22 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* use the QPTR stuff to avoid ABA problems (needs testing)

2009-05-13 16:53  Kyle Wheeler <kbwheel@sandia.gov>

	* initloops

2009-05-13 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* hamming

2009-05-13 07:06  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing the shep==shep case

2009-05-12 23:41  Kyle Wheeler <kbwheel@sandia.gov>

	* finesse the allpairs interface a little (still not perfect)

2009-05-12 22:06  Kyle Wheeler <kbwheel@sandia.gov>

	* extra parens

2009-05-12 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* int is faster

2009-05-12 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* another icc recommendation

2009-05-12 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* allpair work units get queued halfway between their two
	  components (halfway being a vague description for using the
	  sorted neighbor list in a unique way); this avoids problems where
	  the second array is not well distributed, but assumes several
	  things, including that all distances are
	  commutative/bidirectional and that the penalty for
	  distlocal+distremote <= penalty for dist/2remote+dist/2remote

2009-05-12 21:29  Kyle Wheeler <kbwheel@sandia.gov>

	* fold qthread_distance()

2009-05-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* folds

2009-05-12 21:23  Kyle Wheeler <kbwheel@sandia.gov>

	* qdqueue_enqueue_there()

2009-05-12 20:00  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray documentation

2009-05-12 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qarray_iter typo

2009-05-11 23:22  Kyle Wheeler <kbwheel@sandia.gov>

	* using autoconf to define macros with arguments doesnt always
	  work. <sigh>

2009-05-11 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* skip the verbose output

2009-05-11 22:52  Kyle Wheeler <kbwheel@sandia.gov>

	* initialize qdle

2009-05-11 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* misspelled QTHREAD_HAVE_LIBNUMA

2009-05-11 22:22  Kyle Wheeler <kbwheel@sandia.gov>

	* use quotes for config.h

2009-05-11 22:10  Kyle Wheeler <kbwheel@sandia.gov>

	* fix pthread_join error reporting

2009-05-11 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* missing close-brace

2009-05-11 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* removed some icc Wall warnings; simplified mpool internal alloc;
	  fixed qthread_retloc bug

2009-05-11 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* removed a few icc Wall warnings

2009-05-11 20:51  Kyle Wheeler <kbwheel@sandia.gov>

	* removed a few icc Wall warnings

2009-05-11 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Intel compiler warnings (not -Wall)

2009-05-09 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* pointless cast

2009-05-09 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* use Q_ALIGNED

2009-05-09 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* restrict is only useful for ptrs of the same type

2009-05-09 07:32  Kyle Wheeler <kbwheel@sandia.gov>

	* restrained use of restrict

2009-05-09 07:22  Kyle Wheeler <kbwheel@sandia.gov>

	* work-queue-based allpairs... beginning to get a handle on
	  distribution of work now. also, allpairs takes TWO qarrays now,
	  instead of one.

2009-05-09 07:19  Kyle Wheeler <kbwheel@sandia.gov>

	* me is allowed to be null

2009-05-09 07:18  Kyle Wheeler <kbwheel@sandia.gov>

	* using restrict extensively... is it wrong or helpful?

2009-05-09 07:15  Kyle Wheeler <kbwheel@sandia.gov>

	* enable extensive use of "restrict" in headers

2009-05-09 03:56  Kyle Wheeler <kbwheel@sandia.gov>

	* minor readability improvement

2009-05-09 03:55  Kyle Wheeler <kbwheel@sandia.gov>

	* turns out, the "me" variable was being passed around
	  unnecessarily for a bunch of the initialization stuff

2009-05-09 03:14  Kyle Wheeler <kbwheel@sandia.gov>

	* use new qarray iface

2009-05-09 03:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing qarray defaults; make the interface a little cleaner and
	  more flexible

2009-05-09 03:06  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing -Wall errors

2009-05-08 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* Made qt_allpairs work with qarrays instead of generic arrays
	  (input, not output). The idea is that this can be used to inform
	  locality decisions. The implementation is still relatively naive,
	  and VERY imbalanced, but it is at least parallel (heh).

2009-05-08 18:32  Kyle Wheeler <kbwheel@sandia.gov>

	* added a const iter_loop, and made it possible to limit the range
	  of iteration

2009-05-08 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* fix -Wall warnings about unused things

2009-05-08 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* using Q_STARTCXX/Q_ENDCXX, and reformatting with gnu indent

2009-05-08 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix -Wall warnings

2009-05-08 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* using Q_STARTCXX/Q_ENDCXX, and reformatting with gnu indent

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* convenience buildall target

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid nullifying asserts

2009-05-08 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid unused var warning

2009-05-08 18:26  Kyle Wheeler <kbwheel@sandia.gov>

	* correct includes

2009-05-08 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* tidying up a little (mostly whitespace, but added Q_STARTCXX and
	  Q_ENDCXX to be helpful in other headers)

2009-05-08 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* tag static convenience functions as unused, to avoid -Wall
	  warnings

2009-05-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* make the attribute stuff available to the header files

2009-05-08 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* better filename

2009-05-08 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* preparing to use gcc-style __attribute__ flags a bit more

2009-05-07 20:10  Kyle Wheeler <kbwheel@sandia.gov>

	* basic allpairs (needs much work - not parallel!)

2009-05-07 19:16  Kyle Wheeler <kbwheel@sandia.gov>

	* try to guess the right number of threads if qthread_init(0)

2009-05-07 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix lazy threadid dependence behavior

2009-04-22 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* remove Intel compiler warnings

2009-04-22 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* support intels compiler on IA32 as well

2009-04-14 18:47  Kyle Wheeler <kbwheel@sandia.gov>

	* detect and handle old versions of libnuma

2009-04-14 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* sst versions of new functions

2009-04-14 15:34  Kyle Wheeler <kbwheel@sandia.gov>

	* cast qthread_incr argument... need a public cas to make this
	  correct, but this hack should be okay for now

2009-04-14 15:33  Kyle Wheeler <kbwheel@sandia.gov>

	* typo; fix number of args to free()

2009-04-10 23:17  Kyle Wheeler <kbwheel@sandia.gov>

	* mutex pool

2009-04-03 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* allow qthread_init(0)

2009-04-03 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* oop - typo

2009-04-03 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* initial support for qthread_init(0)

2009-04-03 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* oh thank God, I merely got this test backwards. I thought I was
	  going *insane*

2009-04-03 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* forgot to free the timer

2009-04-03 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* make it possible to skip the constant_size test

2009-04-03 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-04-03 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* time libnuma as well

2009-04-03 16:50  Kyle Wheeler <kbwheel@sandia.gov>

	* use a limited set of sizes, and time the assert1_loop ten times,
	  just like everything else

2009-04-03 16:41  Kyle Wheeler <kbwheel@sandia.gov>

	* qpool must be a ptr now

2009-04-03 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* qpool must be a ptr now

2009-04-03 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* STDC_HEADERS is an obsolete #def

2009-04-03 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* too many n's in onnode

2009-04-02 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* try to maintain a consistent create/destroy semantic with the new
	  data structures (qdqueue)

2009-04-02 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* try to maintain a consistent create/destroy semantic with the new
	  data structures (qarray)

2009-04-02 19:40  Kyle Wheeler <kbwheel@sandia.gov>

	* try to maintain a consistent create/destroy semantic with the new
	  data structures

2009-04-02 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* numa allocation apparently only does local memory if you do it
	  explicitly; but avoid using the wrong free() function

2009-04-02 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* explanatory comment

2009-04-01 06:19  Kyle Wheeler <kbwheel@sandia.gov>

	* more portable handling of expect for older autoconfs

2009-04-01 06:06  Kyle Wheeler <kbwheel@sandia.gov>

	* lay groundwork for using __builtin_expect()

2009-04-01 06:05  Kyle Wheeler <kbwheel@sandia.gov>

	* qpool is a ptr

2009-03-31 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* fix lgrp stuff

2009-03-31 19:53  Kyle Wheeler <kbwheel@sandia.gov>

	* skip unnecessary checks

2009-03-31 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* uses asserts

2009-03-31 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* fix sorting shepherd distances in wrong order

2009-03-31 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* fix some NUMA typos in new shepherd distance stuff

2009-03-31 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* needs innards still, for NUMA

2009-03-31 17:30  Kyle Wheeler <kbwheel@sandia.gov>

	* Created public functions qthread_sorted_sheps and
	  qthread_sorted_sheps_remote, for use in data structures that want
	  to know how far apart shepherds are. Its a shortcut to getting a
	  list of remote shepherds in order from nearest to most distant.

2009-03-31 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* oop, too much (fix previous patch)

2009-03-31 16:49  Kyle Wheeler <kbwheel@sandia.gov>

	* Created public function qthread_distance, for use in data
	  structures that want to know how far apart hepherds are.

2009-03-31 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* Created public function qthread_num_shepherds, for use in data
	  structures that want to know how many shepherds there are. This
	  replaces the previous innard function.

2009-03-30 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* fix affinity-only crash on Solaris

2009-03-30 18:06  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid rounding issues on Solaris

2009-03-30 00:24  Kyle Wheeler <kbwheel@sandia.gov>

	* allow loop iterations to have arguments

2009-03-29 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* c++ externs <sigh>

2009-03-29 21:56  Kyle Wheeler <kbwheel@sandia.gov>

	* check for the math.h header even for SST

2009-03-29 21:55  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid compiler warnings

2009-03-29 21:54  Kyle Wheeler <kbwheel@sandia.gov>

	* future_fork_to

2009-03-29 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid memset warning by including the right headers

2009-03-29 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* make the CAS stuff portable (qthreads needs its own CAS)

2009-03-28 07:07  Kyle Wheeler <kbwheel@sandia.gov>

	* pass around memory blocks

2009-03-28 07:06  Kyle Wheeler <kbwheel@sandia.gov>

	* skip the ordering test

2009-03-28 03:50  Kyle Wheeler <kbwheel@sandia.gov>

	* timing qdqueue

2009-03-28 03:50  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2009-03-28 03:12  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid leaking the shep0 stack after finalize

2009-03-28 03:05  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - left some libnuma dregs behind

2009-03-28 03:00  Kyle Wheeler <kbwheel@sandia.gov>

	* calloc to avoid uninitialized variables (mostly just for the
	  bigass array); also, get rid of those pointless MALLOC/FREE #defs

2009-03-28 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* initialize flags, and use calloc for stack (minor safety
	  precaution)

2009-03-28 02:50  Kyle Wheeler <kbwheel@sandia.gov>

	* memory is safer when initialized, and since we only pay the cost
	  once, its not a big deal

2009-03-28 02:49  Kyle Wheeler <kbwheel@sandia.gov>

	* first, numa allocation is way too slow (see qpool.c log). second,
	  memory is safer when initialized, and since we only pay the cost
	  once, its not a big deal

2009-03-28 02:48  Kyle Wheeler <kbwheel@sandia.gov>

	* check for 16-aligned calloc

2009-03-27 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* hypnotoad customization snuck in

2009-03-27 23:12  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - debug printout

2009-03-27 23:00  Kyle Wheeler <kbwheel@sandia.gov>

	* fix numNeighbors bug in libnuma, make it work with lgroup

2009-03-27 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* fix lgrp setup (still needs neighbor work)

2009-03-27 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* preliminary lgrp

2009-03-27 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace/reformatting

2009-03-27 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* fix behavior when all nodes are equidistant

2009-03-27 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* compile on linux

2009-03-27 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* qdqueue implemented, ready for testing

2009-03-25 18:35  Kyle Wheeler <kbwheel@sandia.gov>

	* allow forcing tight segments, so that the compiler can optimize
	  tight loops better

2009-03-23 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* add comment about TODO

2009-03-23 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warning

2009-03-23 19:29  Kyle Wheeler <kbwheel@sandia.gov>

	* compare to cp_list (not 100% fair comparison, but makes me feel
	  better)

2009-03-22 01:49  Kyle Wheeler <kbwheel@sandia.gov>

	* qlfqueue should use the user-accessible qpool, not qt_mpool. To
	  help, the interface now requires a *me* argument

2009-03-22 01:03  Kyle Wheeler <kbwheel@sandia.gov>

	* qlfqueue timer

2009-03-22 01:02  Kyle Wheeler <kbwheel@sandia.gov>

	* document potential wrongness in mpool

2009-03-20 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* using libnuma alloc routines is too slow, and besides it should
	  be automatically handled by the numa_set_preferred() call

2009-03-20 20:46  Kyle Wheeler <kbwheel@sandia.gov>

	* a little minor simplification

2009-03-20 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* no affinity means normal allocation (libnuma is too wasteful)

2009-03-20 20:09  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the NUMA node-choice math

2009-03-20 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* rearrange tests

2009-03-20 19:41  Kyle Wheeler <kbwheel@sandia.gov>

	* minor thing...

2009-03-20 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* single-threaded shepherds dont need the lock

2009-03-20 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* Make qpool distributed.

2009-03-20 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* minor assert bug

2009-03-20 15:24  Kyle Wheeler <kbwheel@sandia.gov>

	* there we go...

2009-03-20 15:14  Kyle Wheeler <kbwheel@sandia.gov>

	* folding

2009-03-20 14:50  Kyle Wheeler <kbwheel@sandia.gov>

	* that bug was *obvious*

2009-03-20 14:36  Kyle Wheeler <kbwheel@sandia.gov>

	* make qpool available... need to figure out the bug in it

2009-03-19 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the qthread_internal_shep_to_node checks to handle shepherds
	  with no affinity correctly; add an official "name" for the "no
	  affinity" result

2009-03-19 16:57  Kyle Wheeler <kbwheel@sandia.gov>

	* this should have been AC_RUN_IFELSE, because apparently some
	  distributions of Linux LOOK like they have an altix timer, when
	  in fact attempting to use it causes a segfault

2009-03-18 14:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qlfqueue_empty return code on null queues

2009-03-18 14:03  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.2 bump

2009-03-17 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* safer futurelib forking. added future_fork_to (a mirror of
	  qthread_fork_to), and stopped qloop.c from using
	  qthread_fork_future_to() directly (because that bypassed futures
	  bookkeeping)

2009-03-17 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* don't assume that futurelib has been initialized

2009-03-17 17:22  Kyle Wheeler <kbwheel@sandia.gov>

	* handle 64-bit aligned_t properly on IA32 (stole code from
	  qthread.h)

2009-03-17 16:23  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2009-03-17 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* fix old typo, and free valloc()d memory if that seems to be safe

2009-03-17 15:53  Kyle Wheeler <kbwheel@sandia.gov>

	* extra tests

2009-03-16 19:07  Kyle Wheeler <kbwheel@sandia.gov>

	* qlfqueue interface made public (undocumented)

2009-03-16 16:02  Kyle Wheeler <kbwheel@sandia.gov>

	* change SWAP to be more optimizable

2009-03-06 20:06  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid passsing numa calls invalid node IDs

2009-03-06 19:59  Kyle Wheeler <kbwheel@sandia.gov>

	* ability to time just a single distribution type

2009-03-06 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* basic libnuma compatibility changes

2009-03-06 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* improve altix timer detection

2009-03-04 20:24  Kyle Wheeler <kbwheel@sandia.gov>

	* use madvise

2009-03-04 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* re-enable condwait on solaris

2009-03-04 19:19  Kyle Wheeler <kbwheel@sandia.gov>

	* use lgrp_root for calling lgrp_walk

2009-03-04 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the condwait bug (I think), and made the affinity stuff
	  slightly more efficient

2009-03-04 16:30  Kyle Wheeler <kbwheel@sandia.gov>

	* disable condwait queue on solaris until I fix it

2009-03-04 10:10  Kyle Wheeler <kbwheel@sandia.gov>

	* only use numa if available

2009-03-04 08:33  Kyle Wheeler <kbwheel@sandia.gov>

	* minor fixes

2009-03-04 08:25  Kyle Wheeler <kbwheel@sandia.gov>

	* lgrp support

2009-03-04 08:02  Kyle Wheeler <kbwheel@sandia.gov>

	* lgrp detection (for solaris)

2009-03-04 00:14  Kyle Wheeler <kbwheel@sandia.gov>

	* new error code

2009-03-04 00:11  Kyle Wheeler <kbwheel@sandia.gov>

	* fix an alignment assertion

2009-02-27 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* oops... "node" is used even without libnuma (mostly because itd
	  be a pain to #def it out everywhere)

2009-02-26 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-02-26 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* use libnuma to ensure that memory really IS local (otherwise,
	  locality is a cache-based idea)

2009-02-26 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* provide a shep-to-node translator

2009-02-26 22:38  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the node-choice logic, provide a shep-to-node translator

2009-02-26 21:24  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace & folding

2009-02-26 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace/reformatting

2009-02-26 20:52  Kyle Wheeler <kbwheel@sandia.gov>

	* use AS_IF and prefix with x

2009-02-26 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* use libnuma for basics

2009-02-26 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* detect libnuma, prefer to plpa

2009-02-25 15:48  Kyle Wheeler <kbwheel@sandia.gov>

	* correct bounds checking on looping with DIST

2009-02-25 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* correct bounds checking on DIST initialization

2009-02-25 08:30  Kyle Wheeler <kbwheel@sandia.gov>

	* better altix check - ensure that qtimer init will work

2009-02-24 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* fix some syntax, and check allocations

2009-02-24 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - move the struct to the header to help with inlining

2009-02-24 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* make element locating inlinable

2009-02-24 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* better tests

2009-02-24 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* more condwait ifdefs

2009-02-18 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* make the pthread-cond-wait thing optional, because it only seems
	  to be crucial on the niagara so far

2009-02-13 04:08  Kyle Wheeler <kbwheel@sandia.gov>

	* memset/memcmp turns out to be faster. Also, do each test ten
	  times and take the average

2009-02-13 04:07  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a BUNCH of little bugs in qarray, but make the segment size
	  less interesting (for now)

2009-02-12 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* fix loop strider to specify array indexes, rather than offsets

2009-02-12 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* use qarray_elem_nomigrate to find array elements instead of
	  pointer math. also, avoid memcmp, since that could cause problems
	  in very large unit sizes

2009-02-12 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* this seems to fix a race condition on Sparc (not sure why... its
	  not the volatile)

2009-02-10 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* updated detection/use of altix timer for newer linux versions

2009-02-10 20:57  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo in assertion

2009-02-10 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the zero-size cluster problem in DIST variants

2009-02-10 19:00  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, typo

2009-02-10 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* print results as we get them

2009-02-06 19:35  Kyle Wheeler <kbwheel@sandia.gov>

	* add the size-sweeping test

2009-02-06 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* use page-aligned memory *safely* for qarrays (sometimes, valloc
	  is broken)

2009-02-06 18:14  Kyle Wheeler <kbwheel@sandia.gov>

	* check return value of processor_bind

2009-02-05 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* use valloc for speed & alignment

2009-02-05 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* processor_bind layout is somewhat tricky... this produces better
	  average performance on a niagara, but probably ought to be
	  tailored to the specific machine in the future

2009-02-05 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* more efficient lock-free queue (i.e. make the spinlock block if
	  it spins too much... *usually* a lock-free queue, but now faster
	  in bad situations)

2009-02-05 18:01  Kyle Wheeler <kbwheel@sandia.gov>

	* detect processor_bind

2009-02-05 08:56  Kyle Wheeler <kbwheel@sandia.gov>

	* fixes for processor_bind() (solaris-only)

2009-02-05 07:20  Kyle Wheeler <kbwheel@sandia.gov>

	* more flexible test running

2009-02-05 06:54  Kyle Wheeler <kbwheel@sandia.gov>

	* that date thing was a horrible idea - very non-portable

2009-02-05 06:51  Kyle Wheeler <kbwheel@sandia.gov>

	* initial (mostly untested) affinity support

2009-02-05 06:22  Kyle Wheeler <kbwheel@sandia.gov>

	* remove compiler warnings when asserts are enabled

2009-02-05 05:47  Kyle Wheeler <kbwheel@sandia.gov>

	* better interactive messages

2009-02-04 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* fix alignment of distributed tags (critical for sparc)

2009-02-04 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* use iter_loop for best time

2009-02-04 17:43  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2009-02-04 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* configurable element count

2009-02-04 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray benchmark

2009-02-04 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* show if using compiler atomics

2009-02-04 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* prevent the original thread from migrating

2009-02-04 16:33  Kyle Wheeler <kbwheel@sandia.gov>

	* add option to disable c++ tests, and protect against malicious
	  arguments

2009-02-04 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* eliminate compiler warnings doing pointer arithmetic on void* by
	  converting to char*

2009-02-04 00:00  Kyle Wheeler <kbwheel@sandia.gov>

	* eliminate compiler warnings doing pointer arithmetic on void* by
	  converting to char*

2009-02-03 23:56  Kyle Wheeler <kbwheel@sandia.gov>

	* detect intel compiler for gcse flag

2009-02-03 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* added bookkeeping for the *_LEAST distribution methods

2009-01-30 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid duplicate symbols when --enable-timer-progs is active;
	  qtimer symbols *should* be in the qthread library when thats
	  active

2009-01-30 17:19  Kyle Wheeler <kbwheel@sandia.gov>

	* move increment tests to time_increments

2009-01-30 17:13  Kyle Wheeler <kbwheel@sandia.gov>

	* why is this not __volatile__?

2009-01-29 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* detect and take advantage of OSXs 16-byte aligned malloc

2009-01-29 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, forgot the C file

2009-01-29 00:04  Kyle Wheeler <kbwheel@sandia.gov>

	* use valloc as a last resort for aligned allocations... too bad
	  that memory can never be *truly* freed

2009-01-28 23:54  Kyle Wheeler <kbwheel@sandia.gov>

	* handle infinite stack size, and create an aligned qt_mpool
	  (relies on aligned memory allocation, so we check for a few
	  aligned memory functions in autoconf)

2009-01-28 23:40  Kyle Wheeler <kbwheel@sandia.gov>

	* some return-value checking

2009-01-28 23:39  Kyle Wheeler <kbwheel@sandia.gov>

	* better comments for IA32

2009-01-28 15:05  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace, and testing all major varieties of qarray
	  distribution

2009-01-28 15:04  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace

2009-01-27 05:09  Kyle Wheeler <kbwheel@sandia.gov>

	* time_gcd

2009-01-27 04:02  Kyle Wheeler <kbwheel@sandia.gov>

	* qarray, initial implementation (needs testing, timing,
	  refinement, manual migration, and *_LEAST implementation)

2009-01-23 22:59  Kyle Wheeler <kbwheel@sandia.gov>

	* svn2cl update

2009-01-23 22:25  Kyle Wheeler <kbwheel@sandia.gov>

	* cleaner compiling for timer progs (removed some compiler -Wall
	  warnings)

2009-01-23 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* unused variable

2009-01-22 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qtimer fix

2009-01-22 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* more friendly defaults for "make check"

2009-01-20 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the const issue with qthread_migrate_to

2009-01-19 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* document and clean up error handling in qthread_migrate_to

2009-01-19 22:41  Kyle Wheeler <kbwheel@sandia.gov>

	* correct lfqueue node alignment/size issue when using unpooled
	  memory

2009-01-19 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* use the (newly standardized) assert magic

2009-01-19 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* moving the assert magic into its own header

2009-01-19 22:27  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_migrate_to()

2009-01-19 22:26  Kyle Wheeler <kbwheel@sandia.gov>

	* does not need to include assert.h

2009-01-19 21:01  Kyle Wheeler <kbwheel@sandia.gov>

	* update ignores for new tests

2009-01-15 21:05  Kyle Wheeler <kbwheel@sandia.gov>

	* clarified the comment

2009-01-15 21:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing cross-platform lfqueue issues (mostly fixing data
	  alignment for the ABA counters)

2009-01-15 19:46  Kyle Wheeler <kbwheel@sandia.gov>

	* trying some stuff out with volatile

2009-01-14 19:27  Kyle Wheeler <kbwheel@sandia.gov>

	* these comments confuse some versions of autoconf

2009-01-13 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* lock-free thread queueing, based on Maged M. Michael & Michael L.
	  Scott's 1996 algorithm

2009-01-09 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* minor efficiency improvement in a cas loop

2009-01-09 19:32  Kyle Wheeler <kbwheel@sandia.gov>

	* accumulator functions should be for aligned_t and friends

2009-01-07 21:22  Kyle Wheeler <kbwheel@sandia.gov>

	* less verbosity

2009-01-07 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* just to avoid ambiguity

2009-01-07 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* remove unnecessary variable

2009-01-07 16:28  Kyle Wheeler <kbwheel@sandia.gov>

	* asserts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* asserts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* test both sorts

2009-01-07 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* minor efficiency fix

2009-01-07 05:55  Kyle Wheeler <kbwheel@sandia.gov>

	* extra test just for qsort

2009-01-06 06:25  Kyle Wheeler <kbwheel@sandia.gov>

	* be more helpful in case of trouble

2009-01-06 06:25  Kyle Wheeler <kbwheel@sandia.gov>

	* minor formatting and printf typechecking fixes

2009-01-06 03:38  Brian Barrett <bwbarre@sandia.gov>

	* This is ugly, but add a qsort for aligned_t datatypes. We should
	  reduce
	  the amount of code duplicated, but there's a paper deadline :/.

2009-01-05 14:47  Kyle Wheeler <kbwheel@sandia.gov>

	* unsigned/signed doesnt matter

2009-01-02 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* better SunPro C++ support (it doesnt understand "__asm__" but
	  DOES understand "asm"). Note that SunPro C understands GCC
	  assembly completely. <sigh>

2008-12-27 03:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fix internal incr on 32-bit architectures that dont have 64-bit
	  incr assembly when aligned_t is forced to 64-bits

2008-12-22 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed icc intrinsic support

2008-12-22 20:14  Kyle Wheeler <kbwheel@sandia.gov>

	* rely on getrlimit for shepherd0 stack size

2008-12-22 20:08  Kyle Wheeler <kbwheel@sandia.gov>

	* fix weird handling of stack sizes and limits in the case of
	  QTHREAD_REAL_MCCOY (i.e. the original thread, now qthread)

2008-12-22 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* put the error checking back

2008-12-22 19:20  Kyle Wheeler <kbwheel@sandia.gov>

	* skip redundant thread allocation

2008-12-22 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the packaging

2008-12-22 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* fix architecture detection

2008-12-22 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* support all the other architectures (preliminiary)

2008-12-22 17:02  Kyle Wheeler <kbwheel@sandia.gov>

	* more autotool droppings

2008-12-22 17:00  Kyle Wheeler <kbwheel@sandia.gov>

	* mostly lock-free mpools

2008-12-22 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* add integer checking, and fix a typo

2008-12-22 16:58  Kyle Wheeler <kbwheel@sandia.gov>

	* use a spinlock in the qt_loop_balance rather than FEBs <sigh>

2008-12-17 23:07  Kyle Wheeler <kbwheel@sandia.gov>

	* ensure that qthread_incr operand is unsigned

2008-12-17 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* corrected the fprintf arguments

2008-12-17 18:26  Kyle Wheeler <kbwheel@sandia.gov>

	* some compilers support builtin atomic operations

2008-12-12 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* make the id test more resilient to configure options
	  (specifically, --enable-debug)

2008-12-12 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* more early clobbering on ppc (good thing we have plenty of
	  registers!)

2008-12-12 21:30  Kyle Wheeler <kbwheel@sandia.gov>

	* the ppc64 mod code is now tested; removed warning

2008-12-12 21:18  Kyle Wheeler <kbwheel@sandia.gov>

	* more autoconf droppings

2008-12-12 21:17  Kyle Wheeler <kbwheel@sandia.gov>

	* test internal atomic-mod implementation

2008-12-12 20:59  Kyle Wheeler <kbwheel@sandia.gov>

	* fix dincr on ppc64

2008-12-12 08:26  Kyle Wheeler <kbwheel@sandia.gov>

	* rename testq to be more obvious

2008-12-12 08:25  Kyle Wheeler <kbwheel@sandia.gov>

	* get rid of some -Wall warnings

2008-12-12 08:24  Kyle Wheeler <kbwheel@sandia.gov>

	* move qthread_debug so that it can be and is used by the futurelib
	  stuff too

2008-12-12 07:14  Kyle Wheeler <kbwheel@sandia.gov>

	* good reference comments

2008-12-12 06:58  Kyle Wheeler <kbwheel@sandia.gov>

	* use va_arg macro in debugging

2008-12-11 20:50  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore segment registers... seems to cause problems on x86_64,
	  despite their regular use on IA32, and besides, I don't think we
	  have to callee-save them *anyway*

2008-12-11 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* OSX x86_64 support

2008-12-11 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* another sanity assert

2008-12-08 16:29  Kyle Wheeler <kbwheel@sandia.gov>

	* back to plain ol inline - per discussion with Brian

2008-12-07 06:45  Kyle Wheeler <kbwheel@sandia.gov>

	* minor extension

2008-12-07 06:44  Kyle Wheeler <kbwheel@sandia.gov>

	* QINLINE

2008-12-07 06:44  Kyle Wheeler <kbwheel@sandia.gov>

	* QINLINE

2008-12-07 06:43  Kyle Wheeler <kbwheel@sandia.gov>

	* tidy up a bit

2008-12-07 03:26  Brian Barrett <bwbarre@sandia.gov>

	* fix silly typo in _const wrappers
	  -This line, and those below, will be ignored--
	  
	  M include/qthread/qthread.hpp

2008-12-06 23:44  Brian Barrett <bwbarre@sandia.gov>

	* * Add C++ "bindings" for the FEBs. Just a template wrapper so
	  that we can
	  accept any pointer type that has an underlying type that is the
	  same size
	  as aligned_t. Also allows qthread_incr() to be called for all
	  supported
	  types, rather than having fincr() and dincr().

2008-12-06 21:34  Brian Barrett <bwbarre@sandia.gov>

	* checkpoint to switch machines. First take at the shell of a c++
	  wrapper to
	  the qthreads api

2008-12-05 08:17  Kyle Wheeler <kbwheel@sandia.gov>

	* oops

2008-12-05 04:39  Kyle Wheeler <kbwheel@sandia.gov>

	* aligned_t requires a compatibility bump

2008-12-04 22:53  Kyle Wheeler <kbwheel@sandia.gov>

	* these things all require aligned_t arguments now

2008-12-04 22:46  Kyle Wheeler <kbwheel@sandia.gov>

	* correct sizes in allocated memory

2008-12-04 22:45  Kyle Wheeler <kbwheel@sandia.gov>

	* correct sizes in allocated memory

2008-12-04 22:43  Kyle Wheeler <kbwheel@sandia.gov>

	* correct noun in comment

2008-12-04 22:34  Kyle Wheeler <kbwheel@sandia.gov>

	* detect math.h

2008-12-04 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* size_t != aligned_t

2008-12-04 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fix unused variable warnings

2008-12-04 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* fix unused variable warnings

2008-12-04 22:31  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid mktemp warning

2008-12-04 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* size_t != aligned_t

2008-12-04 22:09  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_writeFE and qthread_writeFE_const require aligned_t
	  arguments

2008-12-04 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_writeF and qthread_writeF_const require aligned_t
	  arguments

2008-12-04 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_readFE requires aligned_t arguments

2008-12-04 21:58  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_readFF requires aligned_t arguments

2008-12-04 21:49  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil now works on aligned_t types rather than ints and uints

2008-12-04 21:47  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_feb_status and qthread_empty and qthread_fill all use
	  aligned_t* arguments

2008-12-04 21:38  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_lock and unlock now take aligned_t pointer arguments

2008-12-04 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_lock and unlock now take aligned_t pointer arguments

2008-12-04 21:25  Brian Barrett <bwbarre@sandia.gov>

	* Fix race condition in the mpool. The variable syncmode was being
	  used both
	  to initialize cprops hash table and the mpool. Unfortunately, the
	  default
	  for multi-threaded codes, COLLECTION_MODE_PLAIN, is 0, which was
	  disabling
	  synchronization in the mpool. Split the meanings to be more
	  obvious.

2008-12-04 19:57  Brian Barrett <bwbarre@sandia.gov>

	* sigh

2008-12-04 18:50  Kyle Wheeler <kbwheel@sandia.gov>

	* obey the config detection of unistd.h

2008-12-04 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* display the aligned_t info

2008-12-04 18:23  Brian Barrett <bwbarre@sandia.gov>

	* fix my dumb semicolon placement

2008-12-04 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* remove indent-droppings

2008-12-04 18:08  Kyle Wheeler <kbwheel@sandia.gov>

	* typo in the last commit :P

2008-12-04 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* clarity in the aligned_t size/alignment logic... I think

2008-12-04 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* better 64-bit handling on 32-bit sparc, plus minor cleanup to
	  make inlining easier

2008-12-03 23:56  Kyle Wheeler <kbwheel@sandia.gov>

	* upon suggestion of libtoolize...

2008-12-03 19:04  Brian Barrett <bwbarre@sandia.gov>

	* Change default on 64 bit platforms to be an align_t that is 64
	  bits long and
	  64 bits aligned. At the same time, make it a little bit more
	  clear what
	  size things are with the #defines

2008-12-03 18:52  Brian Barrett <bwbarre@sandia.gov>

	* add magic to allow qthread_incr to support both 32 and 64 bit
	  math

2008-12-02 22:07  Kyle Wheeler <kbwheel@sandia.gov>

	* lower-overhead debugging with a handwritten debug printf (no
	  longer requires fullsize stacks)

2008-12-02 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* in debug mode, more threads get ids

2008-12-02 20:58  Kyle Wheeler <kbwheel@sandia.gov>

	* allow runtime debug-level control via QTHREAD_DEBUG_LEVEL
	  envariable

2008-11-25 19:33  Kyle Wheeler <kbwheel@sandia.gov>

	* shepherd profiling needs to not skip shepherd 0

2008-11-25 03:21  Kyle Wheeler <kbwheel@sandia.gov>

	* sometimes the test harness feeds us garbage arguments... so be
	  tolerant of nonsensical numbers of threads

2008-11-25 03:15  Kyle Wheeler <kbwheel@sandia.gov>

	* use some more generic notation on the sparc ... suspect that
	  dincr wont work on sparc 32 bits because the registers arent big
	  enough

2008-11-25 00:14  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the asserts to be correct with the new single-threaded
	  shepherd 0

2008-11-24 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* sanity asserts

2008-11-24 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* fix compiling issue (oops)

2008-11-24 04:38  Kyle Wheeler <kbwheel@sandia.gov>

	* move the SST code into a separate (optional) header file

2008-11-24 04:24  Kyle Wheeler <kbwheel@sandia.gov>

	* tidying

2008-11-24 04:24  Kyle Wheeler <kbwheel@sandia.gov>

	* support QINLINE (optional inlining)

2008-11-24 04:23  Kyle Wheeler <kbwheel@sandia.gov>

	* support QINLINE (optional inlining), and also allow the qthread
	  stack size to be defined via environment variable (currently
	  undocumented)

2008-11-24 04:22  Kyle Wheeler <kbwheel@sandia.gov>

	* rearrange a little for sanity's sake, and also add the ability to
	  disable (non-automatic) inlining for debugging/profiling purposes

2008-11-24 04:20  Kyle Wheeler <kbwheel@sandia.gov>

	* fix description, update to current anonymouse qthread/future
	  unification

2008-11-24 04:19  Kyle Wheeler <kbwheel@sandia.gov>

	* fix handling very large memory pool sizes, also beginning support
	  for the QINLINE keyword

2008-11-07 23:26  Kyle Wheeler <kbwheel@sandia.gov>

	* oop; missed this in the last commit

2008-11-07 23:25  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganizing a little

2008-11-07 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_mpool replaces cp_mempool; simpler, and less finicky

2008-11-07 22:23  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid register re-use in qthread_fincr

2008-11-07 20:23  Kyle Wheeler <kbwheel@sandia.gov>

	* reversing the return-value of qthread_fincr

2008-11-07 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* reversing the return-value of qthread_dincr

2008-11-07 20:15  Kyle Wheeler <kbwheel@sandia.gov>

	* reversing the return-value of qthread_incr

2008-11-07 20:11  Kyle Wheeler <kbwheel@sandia.gov>

	* reversing the return-value of qthread_incr

2008-10-09 21:25  Kyle Wheeler <kbwheel@sandia.gov>

	* slightly cleaner version of the previous fix

2008-10-09 21:10  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed on MAKECONTEXT_SPLIT systems, I think

2008-10-08 15:17  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid unnecessary malloc call if shepherd_count is 1

2008-09-29 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* another timer loop, just to see if theres a difference

2008-09-29 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* without pthreads as a config option, with appropriate warnings

2008-09-29 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* basic non-pthreads support... but REALLY basic (still uses
	  mutexes for most stuff)

2008-09-25 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* updating to be compatable with OSX 10.5.x - based on some changes
	  to libcoroutine here:
	  http://github.com/stevedekorte/io/tree/f8b0893a8317cbefd5cffe1cebe591ad6c12ae89/libs/coroutine/source

2008-09-25 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* since OSX 10.5.x has non-functional swapcontext functions, we
	  have to test whether swapcontext works before deciding whether we
	  need to use the compatability library

2008-09-25 16:54  Kyle Wheeler <kbwheel@sandia.gov>

	* remove an assert warning on osx 10.5

2008-09-23 18:19  Kyle Wheeler <kbwheel@sandia.gov>

	* optimize serial execution a little by avoiding unnecessary
	  pthread mutex locking when there's only one shepherd, and check
	  the nshepherds argument

2008-09-23 17:55  Kyle Wheeler <kbwheel@sandia.gov>

	* no more implicit pthreads

2008-09-23 17:54  Kyle Wheeler <kbwheel@sandia.gov>

	* better interactive fallback

2008-09-19 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* handle floating point registers correctly on ppc

2008-09-19 21:48  Kyle Wheeler <kbwheel@sandia.gov>

	* fix typo

2008-09-19 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* make qt_loop more efficient, using the incr trick

2008-09-19 21:42  Kyle Wheeler <kbwheel@sandia.gov>

	* improve qthread_empty efficiency when me==NULL and make
	  qthread_yield a little NULL-tolerant

2008-09-19 20:05  Kyle Wheeler <kbwheel@sandia.gov>

	* update documentation for serial qthreads

2008-09-19 01:37  Kyle Wheeler <kbwheel@sandia.gov>

	* comment

2008-09-19 01:23  Kyle Wheeler <kbwheel@sandia.gov>

	* remove pthreads, recognize that qthreads now works in serial
	  (qthread_self() never returns NULL!!!)

2008-09-19 01:21  Kyle Wheeler <kbwheel@sandia.gov>

	* qthreads can now run in SERIAL... removing the pthread
	  requirement comes next?

2008-09-09 21:27  Kyle Wheeler <kbwheel@sandia.gov>

	* fix copy/paste error

2008-09-01 19:57  Kyle Wheeler <kbwheel@sandia.gov>

	* use AS_IF instead of plain ifs

2008-09-01 19:56  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid redundant checks when we know that certain headers dont
	  exist

2008-08-18 22:32  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a typo and a syntax/optimizer problem

2008-08-18 22:30  Kyle Wheeler <kbwheel@sandia.gov>

	* pushing the sparc cas(x) fixes to all the places that its used

2008-08-18 22:04  Kyle Wheeler <kbwheel@sandia.gov>

	* stupid OoO confusion

2008-08-18 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* added time_increments

2008-08-13 19:01  Kyle Wheeler <kbwheel@sandia.gov>

	* make it so you can tailor the test to the hardware

2008-08-13 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* make sure that our timers are reset between runs

2008-08-13 15:40  Kyle Wheeler <kbwheel@sandia.gov>

	* that'll shut up the warnings! :)

2008-08-13 15:38  Kyle Wheeler <kbwheel@sandia.gov>

	* typo - multiplying by too big a number when converting to seconds

2008-08-13 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* detect uc_stack.ss_flags

2008-08-13 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* another formatting fix

2008-08-12 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* convenient formatting, added parallel producer/consumer loops

2008-08-12 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* remind me of how it *should* be

2008-08-12 17:58  Kyle Wheeler <kbwheel@sandia.gov>

	* gcc on sparc is being idiotic and buggy - work around it and
	  leave a comment about whats going on

2008-08-12 15:21  Kyle Wheeler <kbwheel@sandia.gov>

	* sanity checking

2008-08-12 05:52  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, delete CONTEXTLIB from time_swap dependencies

2008-08-12 05:43  Kyle Wheeler <kbwheel@sandia.gov>

	* disabled QTHREAD_WAIT_TIMER_STOP needss second argument

2008-08-11 23:49  Kyle Wheeler <kbwheel@sandia.gov>

	* whitespace fixes according to GNU indent

2008-08-11 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* lock profiling, slightly improved shepherd profiling, and some
	  small syntactic sugar improvements fro thread counting

2008-08-11 23:35  Kyle Wheeler <kbwheel@sandia.gov>

	* test comes last, for sanity reasons. sadly, this means the
	  installation info is printed earlier, but ce est la vie

2008-08-11 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* minor speed improvement for futurelibs destination decision;
	  based on qthread core

2008-08-08 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* time_swap to time the length of swapcontext and
	  time_producerconsumer to time lots of other things that qthreads
	  can do; use --enable-timer-progs to turn them on

2008-07-30 16:38  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed memory leaks

2008-07-29 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid manipulating CFLAGS directly

2008-07-29 19:12  Kyle Wheeler <kbwheel@sandia.gov>

	* fold fincr

2008-07-24 16:18  Kyle Wheeler <kbwheel@sandia.gov>

	* oops; left the stdio.h in there

2008-07-21 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* document the new increment functions

2008-07-21 16:40  Kyle Wheeler <kbwheel@sandia.gov>

	* comment typo

2008-07-18 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* 

2008-07-18 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* a little better debugging info if things go wrong

2008-07-18 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* correcting some weird register re-use issues on ppc with fincr...
	  rearranging inputs and outputs to try and make things sane again

2008-07-18 18:18  Kyle Wheeler <kbwheel@sandia.gov>

	* minor change

2008-07-18 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* asm64 should work form ia32 in fincr

2008-07-18 15:55  Kyle Wheeler <kbwheel@sandia.gov>

	* better fincr comments on amd64

2008-07-18 15:50  Kyle Wheeler <kbwheel@sandia.gov>

	* minor fincr logic error on amd64

2008-07-18 15:42  Kyle Wheeler <kbwheel@sandia.gov>

	* amd64 fincr

2008-07-18 15:37  Kyle Wheeler <kbwheel@sandia.gov>

	* ia64 typo in fincr

2008-07-18 15:35  Kyle Wheeler <kbwheel@sandia.gov>

	* ia64 fincr

2008-07-18 15:29  Kyle Wheeler <kbwheel@sandia.gov>

	* fix sparc typos in fincr

2008-07-18 15:16  Kyle Wheeler <kbwheel@sandia.gov>

	* adding qthread_fincr()

2008-07-01 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* document qthread_dincr

2008-06-30 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* help with SST

2008-06-16 18:20  Kyle Wheeler <kbwheel@sandia.gov>

	* support IA32 PIC code (e.g. MacOS X generates PIC code by
	  default)

2008-06-16 16:32  Kyle Wheeler <kbwheel@sandia.gov>

	* added AMD64-specific code, and rewrote the IA32 code so that it
	  works on an Athlon, with lots of explanatory commenting. As a
	  useful side-effect, the IA32 code is now much more elegant (and I
	  understand gcc inlined ASM semantics more than I did before)

2008-06-13 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* ignore testdincr binary

2008-06-13 21:06  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the typo for IA64 and get it working with punned types

2008-06-13 20:34  Kyle Wheeler <kbwheel@sandia.gov>

	* minor typo in SPARC type punning

2008-06-13 18:49  Kyle Wheeler <kbwheel@sandia.gov>

	* IA32 (and maybe AMD64) assembly for dincr rewritten and tested

2008-06-13 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil function args should be declared const

2008-06-13 18:24  Kyle Wheeler <kbwheel@sandia.gov>

	* make configure work properly even when echo doesnt support the -n
	  flag

2008-06-13 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil function args should be declared const

2008-06-12 20:49  Kyle Wheeler <kbwheel@sandia.gov>

	* PPC32 now compiles cleanly despite lack of dincr support

2008-06-12 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test the qthread_dincr function

2008-06-12 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_dincr works on PPC64 now... testing type punning (read:
	  unions)

2008-06-12 20:20  Kyle Wheeler <kbwheel@sandia.gov>

	* 64-bit PPC OSX makecontext support!

2008-06-12 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* make error assertion a little more useful

2008-06-12 16:45  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the 64-bit test in the incr_mod function on ia64

2008-06-12 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* add qthread_dincr

2008-05-05 23:25  Kyle Wheeler <kbwheel@sandia.gov>

	* remove spurious error when enabling debug trace

2008-05-05 23:23  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the test (why does this matter?)

2008-04-11 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* better error handling (less reliance on assert)

2008-04-04 22:01  Kyle Wheeler <kbwheel@sandia.gov>

	* ifdef the config.h so I can use this code for other stuff

2008-04-04 21:57  Kyle Wheeler <kbwheel@sandia.gov>

	* this should help build the src before the test when doing `make
	  check` -- as long as check_SUBDIRS is supported by automake
	  (otherwise its just as bad as before)

2008-04-04 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* be more verbose about qtimer type

2008-04-04 21:46  Kyle Wheeler <kbwheel@sandia.gov>

	* MMTIMER_GETFREQ returns results in Hz, not micro-Hz

2008-04-04 21:44  Kyle Wheeler <kbwheel@sandia.gov>

	* ifdef the config.h so I can use this code for other stuff

2008-04-02 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the sizeof assertion

2008-03-28 18:37  Kyle Wheeler <kbwheel@sandia.gov>

	* minor documentation change

2008-03-28 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* if sizeof(int) < sizeof(aligned_t), avoid errors by aborting -
	  DOCUMENT THIS

2008-03-24 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* another AS_IF fix

2008-03-24 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* AS_IF doesnt quite work as advertized on autoconf 2.59

2008-03-22 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* trying to avoid excess flags

2008-03-21 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2008-03-21 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fix the qthread_fork_to retval

2008-03-19 04:46  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a bunch of casts for SST (which corrects some compiler
	  errors) and fix a problem with qthread_incr() returning the wrong
	  value

2008-03-19 04:44  Kyle Wheeler <kbwheel@sandia.gov>

	* on SST, we have no qlib object, so we need a new way of finding
	  out how many shepherds there are

2008-03-19 04:43  Kyle Wheeler <kbwheel@sandia.gov>

	* a bunch of compiler flags are needed to compile a valid library
	  for use with the SST

2008-03-14 19:38  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the WORDSIZE bug by replacing it with sizeof(aligned_t).
	  also moved a few things around in qthread.h to make it a little
	  tidier, and increased the size of qthread_shepherd_id_t (cuz
	  these days you just never know)

2008-03-14 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* theres no reason UINT8_MAX should need to be defined in the code
	  (if the system is wonky, define it in the configure script)

2008-03-14 19:10  Kyle Wheeler <kbwheel@sandia.gov>

	* not sure what system this was supposed to fix, but whatever it
	  was, the test should go into the configure script instead of the
	  code

2008-03-14 19:08  Kyle Wheeler <kbwheel@sandia.gov>

	* moved default stack size determination into the configure script,
	  and out of the code

2008-03-14 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* rolled back the AS_CASE constructions. Apparently "too immature
	  to be widely used" means "AS_CASE is not supported by autoconf
	  2.59"

2008-03-14 00:21  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed --enable-asserts (missing a comma), simplified a few AS_IF
	  instances, and replaced the two case statements with AS_CASE
	  constructions. The documentation for autoconf says the AS_IF and
	  AS_CASE constructions are "too immature to be widely used"... Oh
	  well.

2008-03-14 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* should really check these things

2008-03-13 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* 64-bit incr_mod implementation

2008-03-13 23:10  Kyle Wheeler <kbwheel@sandia.gov>

	* tidy up the new asm changes a little

2008-03-13 22:00  Brian Barrett <bwbarre@sandia.gov>

	* Also need to set alignment to 64 bit when using 64 bit align_t

2008-03-13 21:52  Brian Barrett <bwbarre@sandia.gov>

	* Differentiate between alignment and size for align_t type

2008-03-13 21:44  Brian Barrett <bwbarre@sandia.gov>

	* * Test to see if compiler can properly do gcc inline assembly
	  * Fix IA-32 increment when optimizer enabled
	  * Add better support for platforms that can have aligned_t be
	  either
	  32 or 64 bits

2008-03-11 20:21  Kyle Wheeler <kbwheel@sandia.gov>

	* intel OSX boxes

2008-03-03 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* enough of cross-compiling warnings

2008-03-03 19:31  Kyle Wheeler <kbwheel@sandia.gov>

	* dependencies

2008-03-03 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* simpler need-qtimer test

2008-03-03 19:30  Kyle Wheeler <kbwheel@sandia.gov>

	* altix qtimer fixes

2008-03-01 19:04  Brian Barrett <bwbarre@sandia.gov>

	* Add initial (untested) support for Altix timers

2008-02-29 01:55  Kyle Wheeler <kbwheel@sandia.gov>

	* svn2cl stuff

2008-02-29 01:36  Kyle Wheeler <kbwheel@sandia.gov>

	* silence garbage test output

2008-02-29 01:36  Kyle Wheeler <kbwheel@sandia.gov>

	* fix error compiling without need of qtimer

2008-02-29 01:13  Kyle Wheeler <kbwheel@sandia.gov>

	* correct incr when using mutexes

2008-02-29 01:12  Kyle Wheeler <kbwheel@sandia.gov>

	* silce the output

2008-02-29 01:11  Kyle Wheeler <kbwheel@sandia.gov>

	* qloop goes with sst too

2008-02-29 01:11  Kyle Wheeler <kbwheel@sandia.gov>

	* correct incr for Altix

2008-02-29 00:51  Kyle Wheeler <kbwheel@sandia.gov>

	* use AS_IF

2008-02-29 00:46  Kyle Wheeler <kbwheel@sandia.gov>

	* fix qtimer inclusion

2008-02-29 00:28  Kyle Wheeler <kbwheel@sandia.gov>

	* remove format warning on icc

2008-02-29 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* fix writeF return value

2008-02-29 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* better ignores

2008-02-29 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* use dnl

2008-02-29 00:07  Kyle Wheeler <kbwheel@sandia.gov>

	* now we're down to just two assembly loops

2008-02-28 21:36  Brian Barrett <bwbarre@sandia.gov>

	* Hack for working around Sun's attribute aligned issue -- I can't
	  seem to
	  find a way to make a small testcase that shows the problem. Ugh.

2008-02-28 21:08  Brian Barrett <bwbarre@sandia.gov>

	* Fix compiler warning

2008-02-28 20:57  Brian Barrett <bwbarre@sandia.gov>

	* - Find the right timer
	  - Fix missing header in gettimeofday timer
	  - Implement Solaris gethrtime timer

2008-02-28 20:20  Brian Barrett <bwbarre@sandia.gov>

	* Verified we could use AM 1.7. Added rational for not supporting
	  1.6.3
	  (which is what ships with Tiger)

2008-02-28 20:08  Brian Barrett <bwbarre@sandia.gov>

	* Fix compatibility with AC 2.52

2008-02-28 19:58  Brian Barrett <bwbarre@sandia.gov>

	* Rather large rewrite of configure and build files to be a little
	  bit
	  more user friendly and fix up a couple of issues that were
	  causing
	  problems on some platforms. Also splits the big macros into their
	  own .m4 files to make the top-level configure a bit easier to
	  follow.

2008-02-27 23:36  Brian Barrett <bwbarre@sandia.gov>

	* Remove turd files during make clean. Don't need to be quite as
	  aggressive
	  as before, as we don't need quite as pristine a source tree now
	  that
	  "make dist" is used instead of tarring up the source...

2008-02-27 23:31  Brian Barrett <bwbarre@sandia.gov>

	* Ugly hack to pass in --with-cprops to configure during distcheck
	  if it was
	  passed to the initial configure, so that make distcheck will work
	  if
	  cprops isn't in the default search path.

2008-02-27 23:26  Brian Barrett <bwbarre@sandia.gov>

	* Fix typo in their macro (which Kyle had fixed in the old
	  acinclude version)

2008-02-27 23:17  Brian Barrett <bwbarre@sandia.gov>

	* Clean up macro usage

2008-02-27 22:51  Brian Barrett <bwbarre@sandia.gov>

	* Small AC/AM cleanups

2008-02-27 22:50  Brian Barrett <bwbarre@sandia.gov>

	* Ooops, actually do need to distclean qthread-int.h

2008-02-27 22:35  Brian Barrett <bwbarre@sandia.gov>

	* Use AC_CONFIG_HEADERS instead of own command to generate common.h

2008-02-27 22:09  Brian Barrett <bwbarre@sandia.gov>

	* move build artifacts into subdirectory

2008-02-27 22:04  Brian Barrett <bwbarre@sandia.gov>

	* Learn to spell

2008-02-27 22:04  Brian Barrett <bwbarre@sandia.gov>

	* Add --with-cprops option to avoid having to set CPPFLAGS and
	  LDFLAGS...

2008-02-26 22:14  Kyle Wheeler <kbwheel@sandia.gov>

	* autoupdate on grover brings the code up to spec for autotools
	  2.59... apparently it doesnt like it when subdirs are subdirs

2008-02-26 22:08  Kyle Wheeler <kbwheel@sandia.gov>

	* AS_HELP_STRING is standard in 2.59, I believe

2008-02-26 22:02  Kyle Wheeler <kbwheel@sandia.gov>

	* source comment

2008-02-26 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* rearranged and updated everything so that "make distcheck" works
	  perfectly

2008-02-26 18:16  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganize the includes a little bit, and move config.h into the
	  include directory

2008-02-26 17:56  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganize the source into a src directory to be tidier

2008-02-26 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* moved tests to tidy up source

2008-02-26 17:25  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganizing man and includes to get the libtool message printed
	  out last

2008-02-26 16:35  Kyle Wheeler <kbwheel@sandia.gov>

	* ignores

2008-02-26 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* qtimer support

2008-02-26 16:22  Kyle Wheeler <kbwheel@sandia.gov>

	* shepherd profiling

2008-02-26 16:19  Kyle Wheeler <kbwheel@sandia.gov>

	* qtimer basics (with mach)

2008-02-21 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* remove a stupid cross-compiling warning

2008-02-21 21:19  Kyle Wheeler <kbwheel@sandia.gov>

	* ac_prog_ranlib is outdated

2008-02-12 19:16  Brian Barrett <bwbarre@sandia.gov>

	* Remove autotools artifacts from Subversion

2008-02-12 19:15  Brian Barrett <bwbarre@sandia.gov>

	* add an autogen.sh script to do the right rebuild mojo

2008-02-07 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* remove a fresh checkout warning

2008-02-07 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* autoreconf

2008-02-07 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* new incr test safe for general consumption

2008-02-07 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid warning messages with software increments

2008-02-07 18:23  Kyle Wheeler <kbwheel@sandia.gov>

	* get the PPC qthread_incr semantics correct

2008-02-05 00:08  Kyle Wheeler <kbwheel@sandia.gov>

	* pre 1.1 commit

2008-02-04 23:47  Kyle Wheeler <kbwheel@sandia.gov>

	* autoreconf

2008-02-04 23:28  Kyle Wheeler <kbwheel@sandia.gov>

	* detect weird makecontext problems

2008-02-04 23:27  Kyle Wheeler <kbwheel@sandia.gov>

	* easier debugging

2008-02-04 23:24  Kyle Wheeler <kbwheel@sandia.gov>

	* more than just counting threads, plus some minor c++
	  compatibility

2008-02-04 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* c++ compatability

2008-02-04 23:20  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2008-02-04 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2008-01-25 19:24  Kyle Wheeler <kbwheel@sandia.gov>

	* split makecontext

2008-01-25 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* minor nit in the qthread_init declaration

2008-01-25 17:32  Brian Barrett <bwbarre@sandia.gov>

	* update to match proper semantics

2008-01-24 22:39  Brian Barrett <bwbarre@sandia.gov>

	* CHeck for proper return code from qhtread_incr

2008-01-24 22:38  Brian Barrett <bwbarre@sandia.gov>

	* Atomic functions should have their memory pointer marked as
	  volatile

2008-01-24 22:12  Brian Barrett <bwbarre@sandia.gov>

	* wrong comments are worse than no comments!

2008-01-24 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* corrected the semantics of the Sparc assembly

2008-01-24 19:39  Brian Barrett <bwbarre@sandia.gov>

	* * Implement assembly for internal_incr_mod
	  * Fix error in incrementing oldval in the wrong place with
	  internal_incr
	  * Minor optimization found by Kyle

2008-01-24 18:55  Kyle Wheeler <kbwheel@sandia.gov>

	* moved asserts into qthread_innards.h and altered the #defs around
	  the sun assembly

2008-01-24 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* added asserts that can be enabled with --enable-asserts

2008-01-24 16:53  Brian Barrett <bwbarre@sandia.gov>

	* Implement SPARC assembly. Due to a bug in the Sun studio
	  compiler,
	  only use if SUN_ASSEMBLY is manually defined

2008-01-24 16:51  Kyle Wheeler <kbwheel@sandia.gov>

	* a few obscure warnings on Solaris fixed

2008-01-23 17:21  Kyle Wheeler <kbwheel@sandia.gov>

	* test_id and autoreconf

2008-01-23 15:32  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2008-01-23 15:31  Kyle Wheeler <kbwheel@sandia.gov>

	* added option to force 64-bit alignment

2008-01-22 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2008-01-22 19:26  Kyle Wheeler <kbwheel@sandia.gov>

	* gcc doesnt seem to like that typename keyword... there HAS to be
	  a right way to do this

2008-01-22 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* autoreconf

2008-01-22 18:43  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the stdint.h compatability, added an assert on
	  getcontext(), and made it possible to have an inverse stack (for
	  Solaris 8)

2008-01-22 18:40  Kyle Wheeler <kbwheel@sandia.gov>

	* inverse-stack detection for solaris 8 (needs to be extended to
	  earlier solarises too, but... get me a machine!)

2008-01-22 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* preliminary assembly for sparc

2008-01-22 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* using typename keyword helps this stuff

2008-01-22 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* kind of an important omission, eh?

2008-01-22 18:33  Kyle Wheeler <kbwheel@sandia.gov>

	* more portable #defs

2008-01-22 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* this inline is an optimization, and can cause trouble if its
	  taken as "static inline", as some compilers like doing

2008-01-22 18:25  Kyle Wheeler <kbwheel@sandia.gov>

	* sun fixes

2008-01-22 18:21  Kyle Wheeler <kbwheel@sandia.gov>

	* hypnotoad/Solaris fixes

2008-01-20 23:17  Kyle Wheeler <kbwheel@sandia.gov>

	* typo?

2008-01-17 07:00  Kyle Wheeler <kbwheel@sandia.gov>

	* check return values

2008-01-15 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* sun compatability with cprops and sockets

2008-01-15 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* compatability with sun ... should really move this to
	  configure.in

2008-01-15 20:27  Kyle Wheeler <kbwheel@sandia.gov>

	* cleaner compile by undeffing DBprintf

2008-01-15 01:59  Kyle Wheeler <kbwheel@sandia.gov>

	* merged the sst code, and created common.h to contain crucial
	  configuration info

2008-01-11 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* avoid using base register accidentally

2008-01-11 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* FINALLY found what I think is a portable solution to the stupid
	  r0 problem

2007-12-20 21:53  Kyle Wheeler <kbwheel@sandia.gov>

	* minor corrections

2007-11-28 01:43  Kyle Wheeler <kbwheel@sandia.gov>

	* Apple fixed their gcc

2007-11-01 16:24  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2007-09-17 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* 1.0

2007-09-17 18:48  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2007-09-17 18:46  Kyle Wheeler <kbwheel@sandia.gov>

	* older autotools, for compatibility

2007-09-17 18:39  Kyle Wheeler <kbwheel@sandia.gov>

	* maybe this arrangement is better

2007-09-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* for completeness

2007-09-17 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* linux

2007-09-17 18:36  Kyle Wheeler <kbwheel@sandia.gov>

	* remove some debugging gunk

2007-09-17 18:35  Kyle Wheeler <kbwheel@sandia.gov>

	* conditional compilation of osx_compat

2007-09-17 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* more apple compatability, and added some return errors in
	  qthread_fork* functions

2007-09-17 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* reorganization of osx_compat

2007-09-14 20:32  Kyle Wheeler <kbwheel@sandia.gov>

	* better no-gcse test

2007-09-14 20:31  Kyle Wheeler <kbwheel@sandia.gov>

	* bump the library version for the new error handling, and add the
	  qthread_incr man page

2007-09-14 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* new error handling, plus more compatible with non-gcc compilers
	  (removed __extension__ stuff)

2007-09-14 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* new error handling

2007-09-14 20:29  Kyle Wheeler <kbwheel@sandia.gov>

	* document the new error handling

2007-09-12 15:27  Kyle Wheeler <kbwheel@sandia.gov>

	* standardize lockbin choosing, and remove pointless threading from
	  qthread_empty/fill

2007-09-11 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fix a bug in the ppc version of qthread_incr, so that it returns
	  the right value (namely, the value before incrementing)

2007-09-11 22:11  Kyle Wheeler <kbwheel@sandia.gov>

	* better formatting

2007-09-11 20:40  Kyle Wheeler <kbwheel@sandia.gov>

	* better qthread_incr portability (add x86_64 boxes, remove i386s,
	  fix up alternate ia64 cpus)

2007-09-11 20:38  Kyle Wheeler <kbwheel@sandia.gov>

	* portability to x86_64 boxes

2007-09-11 19:43  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, minor bug in internal increment on ppc

2007-07-19 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* warning removed

2007-07-19 21:50  Kyle Wheeler <kbwheel@sandia.gov>

	* include config.h

2007-07-19 21:43  Kyle Wheeler <kbwheel@sandia.gov>

	* Version 0.8 Commit

2007-07-19 21:16  Kyle Wheeler <kbwheel@sandia.gov>

	* updated autotools scripts

2007-07-19 21:12  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2007-07-19 20:53  Kyle Wheeler <kbwheel@sandia.gov>

	* those optimizations were both pointless and logically flawed

2007-07-19 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* document OSX's broken-ness

2007-07-19 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* put the stupid & back... it needs to be there. turns out, MacOS
	  X's 4.0.1 compiler has an optimization bug in it that can cause
	  it to generate assembly that it cannot compile.

2007-07-19 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* qt_qsort

2007-07-19 16:02  Kyle Wheeler <kbwheel@sandia.gov>

	* this seems to make OSX happier (turning =&r into =r)

2007-07-19 16:01  Kyle Wheeler <kbwheel@sandia.gov>

	* minor formatting

2007-07-19 15:59  Kyle Wheeler <kbwheel@sandia.gov>

	* reduce stack load

2007-07-19 15:58  Kyle Wheeler <kbwheel@sandia.gov>

	* a bit more of a high-level description, in case someone wants one

2007-07-19 15:56  Kyle Wheeler <kbwheel@sandia.gov>

	* backporting to be compatible with autoconf 2.59

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* using enable/disable instead of with/without

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* made it reflect the current interface

2007-06-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed an off-by-one bug

2007-06-14 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* consistency in mutex-based incrementing flags

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* typos

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* c++ compatability and some utility accumulator functions

2007-06-14 23:13  Kyle Wheeler <kbwheel@sandia.gov>

	* include config.h

2007-06-06 20:43  Kyle Wheeler <kbwheel@sandia.gov>

	* added qloop section of library

2007-06-06 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* removed pedantic warnings

2007-06-06 20:42  Kyle Wheeler <kbwheel@sandia.gov>

	* no need to allocate stacks and contexts when finalizing, plus add
	  __extension__ to clean up pedantic warnings

2007-06-06 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* minor changes, making a few things simpler and removing a
	  compilation warning

2007-06-06 18:22  Kyle Wheeler <kbwheel@sandia.gov>

	* minor typos

2007-06-01 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* both sorts

2007-05-30 15:45  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2007-05-30 15:44  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed memory imbalancing by reinstituting locks everywhere and
	  adding creator pointers. added some minor optimizations based on
	  this. in some basic testing, this doesnt appear to add
	  significant amounts of overhead, so... maybe we're getting away
	  with murder here. keep your fingers crossed.

2007-05-30 15:41  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed minor syntax errors

2007-05-29 16:42  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2007-05-24 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* remove extraneous argument from qutil_mergesort

2007-05-24 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* document qutil

2007-05-24 21:20  Kyle Wheeler <kbwheel@sandia.gov>

	* added the ability to do without setrlimit if you want on linux,
	  and the ability to force it to avoid using assembly for fast
	  locks (e.g. if they arent as fast as one would think)

2007-05-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed bug in asserts/threadcount

2007-05-16 16:27  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2007-05-15 22:51  Kyle Wheeler <kbwheel@sandia.gov>

	* minor fix to work with Intels compiler on Itanium, and some
	  formatting

2007-05-14 21:41  Kyle Wheeler <kbwheel@sandia.gov>

	* updated, preparing for 0.8 release

2007-05-14 21:40  Kyle Wheeler <kbwheel@sandia.gov>

	* lots of atomic increment-mod portability fixes, and a fix to a
	  bug in fallback mode

2007-05-14 21:39  Kyle Wheeler <kbwheel@sandia.gov>

	* attempting to manhandle gcc a little, and worked around a bug in
	  some compilers keyword recognition. also fixed a bug on
	  architectures without atomic assembly support

2007-05-14 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* switched from future_create to future_fork

2007-05-14 21:37  Kyle Wheeler <kbwheel@sandia.gov>

	* altered type to support new fast increment-mod feature

2007-05-14 21:36  Kyle Wheeler <kbwheel@sandia.gov>

	* added changes from Vitus, and removed new gcc 4.1 warnings

2007-05-14 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed a bug on architectures where I cannot use a lockless
	  increment

2007-05-14 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* removed a warning

2007-05-14 21:34  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed a bug (needed to use aligned_t)

2007-05-14 21:33  Kyle Wheeler <kbwheel@sandia.gov>

	* add #define for Xeons (undetectable any other way), changed how I
	  detect cprops, added a workaround for gccs broken gcse, and
	  incremented the version

2007-05-14 21:32  Kyle Wheeler <kbwheel@sandia.gov>

	* add #define for Xeons (undetectable any other way), and changed
	  how I detect cprops

2007-05-14 21:31  Kyle Wheeler <kbwheel@sandia.gov>

	* correcting the documentation

2007-05-10 22:39  Kyle Wheeler <kbwheel@sandia.gov>

	* removing cruft

2007-05-10 22:36  Kyle Wheeler <kbwheel@sandia.gov>

	* made atomic increments and mods faster (in many cases) and more
	  widely used

2007-05-03 17:37  Kyle Wheeler <kbwheel@sandia.gov>

	* minor improvements, stolen from Linux, to the atomic increment

2007-05-03 16:52  Kyle Wheeler <kbwheel@sandia.gov>

	* added qthread_incr

2007-04-20 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* better output formatting

2007-04-20 21:14  Kyle Wheeler <kbwheel@sandia.gov>

	* better output formatting, and fixed the futureinit() call

2007-04-20 16:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qutil_qsort() is now much more scalable (and efficient). I ripped
	  out the Cray partitioner and replaced it with something similar
	  to the standard FastQuickSort algorithm. I fixed a bunch of bugs
	  in it as well. On grover, it now takes only two processors to
	  beat libc qsort().

2007-04-12 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* the testcase can be smaller

2007-04-12 17:33  Kyle Wheeler <kbwheel@sandia.gov>

	* added two different threaded sorts to qutil (merge sucks, btw)

2007-04-12 17:32  Kyle Wheeler <kbwheel@sandia.gov>

	* added megans comments, and made it not allocate memory
	  unnecessarily

2007-04-12 17:31  Kyle Wheeler <kbwheel@sandia.gov>

	* save a qthread_self() call

2007-03-29 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, wasnt supposed to commit that

2007-03-29 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* fully fleshed out qutil arithmetic functions

2007-03-29 17:04  Kyle Wheeler <kbwheel@sandia.gov>

	* fully fleshed out qutil arithmetic functions

2007-03-28 21:11  Kyle Wheeler <kbwheel@sandia.gov>

	* renaming some things to be a little more understandable, improve
	  lockless modding, remove the future_exit() requirement, fixing
	  future creation, and a few other things

2007-03-28 21:09  Kyle Wheeler <kbwheel@sandia.gov>

	* signed aligned numbers, and const readFF src

2007-03-28 21:08  Kyle Wheeler <kbwheel@sandia.gov>

	* contemplating futher integration

2007-03-28 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* added a scheduler to each shepherd (for optimization purposes)
	  and corrected some types

2007-03-28 20:30  Kyle Wheeler <kbwheel@sandia.gov>

	* drastic changes to qutil implementations, added several
	  functions, removed the stupid loop-runner, now uses futures

2007-03-28 20:28  Kyle Wheeler <kbwheel@sandia.gov>

	* optimized, integrated more with qthreads, and removed some
	  idiotic ideas that Id added to it before

2007-03-23 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* no need for the addrstat2 structure anymore

2007-03-23 22:40  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2007-03-23 20:48  Kyle Wheeler <kbwheel@sandia.gov>

	* changed qthread_fill/empty, so must increment the library version
	  number

2007-03-23 20:47  Kyle Wheeler <kbwheel@sandia.gov>

	* formalized options, improved FEB parallelization somewhat,
	  removed qthread_fill/empty count argument

2007-03-23 20:44  Kyle Wheeler <kbwheel@sandia.gov>

	* options galore!

2007-03-23 18:59  Kyle Wheeler <kbwheel@sandia.gov>

	* allow readFFing and such with NULL target values (avoids a
	  memcpy), also change the empty/fill semantics in preparation for
	  making them faster & more parallel

2007-03-23 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* new qthread_empty/fill interface

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* better comments

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* fuller test of qutil

2007-03-23 18:52  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting, and updating

2007-03-21 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* remove irrelevant cast

2007-03-21 19:36  Kyle Wheeler <kbwheel@sandia.gov>

	* typo

2007-03-21 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* added a prototype

2007-03-21 19:23  Kyle Wheeler <kbwheel@sandia.gov>

	* bigger default FEB hashtable

2007-03-21 19:14  Kyle Wheeler <kbwheel@sandia.gov>

	* support full-size stacks, and dont worry about preallocating too
	  many of them

2007-03-19 19:18  Kyle Wheeler <kbwheel@sandia.gov>

	* made freeing threads a little faster in the common (qthread) case
	  and a little slower (but without a memory leak) in the
	  non-qthread case

2007-03-14 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* more accurate cleanup info and formatting niceties

2007-03-13 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* thread counting

2007-03-12 21:58  Kyle Wheeler <kbwheel@sandia.gov>

	* 0.6

2007-03-12 19:15  Kyle Wheeler <kbwheel@sandia.gov>

	* oops

2007-03-10 00:38  Kyle Wheeler <kbwheel@sandia.gov>

	* no locks needed in blocking_vp_incr when running on an SMP

2007-03-10 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* note binary incompatibility

2007-03-10 00:10  Kyle Wheeler <kbwheel@sandia.gov>

	* Extensive use of pthread_getspecific() and related thread-local
	  memory pieces.
	  In theory, this allows us to be a bit faster on very large
	  systems with
	  intelligently implemented pthreads libraries (in practice on
	  smaller systems,
	  it doesn't hurt). Also removed a bunch of locks from thread
	  spawning, namely
	  deciding which shepherd to send it to and generating a thread ID.
	  Now (unless
	  QTHREAD_NONLAZY_THREADIDS is defined) thread ID's are only
	  generated if you
	  ASK for them (via qthread_id()), and which shepherd to send a
	  thread to is
	  done via a per-shepherd round-robin (thus, no locks). This
	  shouldn't result in
	  imbalanced code for sufficiently large numbers of threads.

2007-03-10 00:06  Kyle Wheeler <kbwheel@sandia.gov>

	* trying to be consistent with types

2007-03-09 00:20  Kyle Wheeler <kbwheel@sandia.gov>

	* killed the big central hashtable in futurelib by adding a status
	  bit to every qthread_t

2007-03-09 00:20  Kyle Wheeler <kbwheel@sandia.gov>

	* const makes the world happier

2007-03-09 00:19  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2007-03-07 23:34  Kyle Wheeler <kbwheel@sandia.gov>

	* basic lock parallelism (could expand to using the same for FEBs,
	  but havent yet)

2007-02-28 18:24  Kyle Wheeler <kbwheel@sandia.gov>

	* better assert handling

2007-02-27 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* pointless removal of space

2007-02-27 19:39  Kyle Wheeler <kbwheel@sandia.gov>

	* cleaner asserts

2007-02-21 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* futurelib

2007-01-25 18:17  Kyle Wheeler <kbwheel@sandia.gov>

	* return values on sub functions

2007-01-08 17:46  Kyle Wheeler <kbwheel@sandia.gov>

	* 0.5

2007-01-05 00:37  Kyle Wheeler <kbwheel@sandia.gov>

	* changed the qthread_fork semantics to make qthreads anonymous

2006-12-19 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* name change

2006-12-13 15:15  mlvance

	* *** empty log message ***

2006-12-11 19:33  mlvance

	* *** empty log message ***

2006-12-11 15:27  mlvance

	* *** empty log message ***

2006-12-07 23:39  mlvance

	* *** empty log message ***

2006-12-07 22:28  Kyle Wheeler <kbwheel@sandia.gov>

	* added qutil functions... they are not yet documented, because I
	  suspect them of subtle bugs when adding up large arrays

2006-12-06 21:21  mlvance

	* *** empty log message ***

2006-12-06 21:20  mlvance

	* *** empty log message ***

2006-12-06 21:00  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed a race condition in the FEB handling that could lead to
	  deadlock, and added some notation to make debugging future
	  deadlocks easier

2006-12-05 16:59  Kyle Wheeler <kbwheel@sandia.gov>

	* changed to behaviors rather than types

2006-12-01 23:30  mlvance

	* *** empty log message ***

2006-12-01 20:55  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2006-12-01 19:13  Kyle Wheeler <kbwheel@sandia.gov>

	* The word "yield" was misspelled "yeild".

2006-11-30 21:34  mlvance

	* *** empty log message ***

2006-11-29 20:16  Kyle Wheeler <kbwheel@sandia.gov>

	* added qthread_stackleft()

2006-11-29 18:28  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI wants this to be cast

2006-11-29 18:27  Kyle Wheeler <kbwheel@sandia.gov>

	* Attempting to solve an intractable problem. The deal is that we
	  want to make
	  this template only accept array-ish types (i.e. objects that have
	  operator[]
	  defined), but have no real way of doing that in a cross-compiler
	  compatable
	  way. Suggestions are very welcome.

2006-11-29 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* when installed, it needs to be able to find the loop_iter.hpp
	  file

2006-11-29 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* note libtool fubar-ness

2006-11-28 23:46  Kyle Wheeler <kbwheel@sandia.gov>

	* moved .hpp files as well

2006-11-28 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* new changes

2006-11-28 22:49  Kyle Wheeler <kbwheel@sandia.gov>

	* rearranged, tidied

2006-11-28 19:37  Kyle Wheeler <kbwheel@sandia.gov>

	* make it work with the "standard" install

2006-11-28 19:34  Kyle Wheeler <kbwheel@sandia.gov>

	* removed pointer casting warnings

2006-11-28 18:48  mlvance

	* *** empty log message ***

2006-11-22 18:15  Kyle Wheeler <kbwheel@sandia.gov>

	* version bump

2006-11-22 18:11  Kyle Wheeler <kbwheel@sandia.gov>

	* release

2006-11-22 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* match the manpages

2006-11-22 18:10  Kyle Wheeler <kbwheel@sandia.gov>

	* forgot qalloc

2006-11-22 18:07  Kyle Wheeler <kbwheel@sandia.gov>

	* forgot qalloc, changed the formatting slightly, to be more useful
	  with apropos and other such tools

2006-11-21 22:05  Kyle Wheeler <kbwheel@sandia.gov>

	* disclaimer

2006-11-21 22:00  Kyle Wheeler <kbwheel@sandia.gov>

	* NO_SHEPHERD documentation

2006-11-21 21:59  Kyle Wheeler <kbwheel@sandia.gov>

	* wrap WORDSIZE in an ifndef

2006-11-21 21:51  Kyle Wheeler <kbwheel@sandia.gov>

	* added man pages

2006-11-21 20:07  Kyle Wheeler <kbwheel@sandia.gov>

	* use the new qthread_f prototype

2006-11-21 20:03  Kyle Wheeler <kbwheel@sandia.gov>

	* removed the arg abstraction, make it actually an arg (for speed
	  purposes)

2006-11-21 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* added qthread_feb_status(void*)

2006-11-17 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* release

2006-11-17 18:29  Kyle Wheeler <kbwheel@sandia.gov>

	* make NO_SHEPHERD available to the user

2006-11-17 17:57  Kyle Wheeler <kbwheel@sandia.gov>

	* more formatting, corrected qthread_id()

2006-11-17 17:51  Kyle Wheeler <kbwheel@sandia.gov>

	* formatting

2006-11-17 17:42  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed more memory pooling issues, and added a pretty sizeable
	  speedup by avoiding mutexes in cases where qthread_fork() is
	  called from a qthread (i.e. in MTGL code, 99% of the time)

2006-11-16 22:35  Kyle Wheeler <kbwheel@sandia.gov>

	* release

2006-11-16 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* implemented "make check"

2006-11-16 22:03  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed an idiotic locking error in dynmalloc() (note to self:
	  theres only one bitmap, not one per stream)

2006-11-16 18:54  Kyle Wheeler <kbwheel@sandia.gov>

	* bumped the version to be more release-oriented ;)

2006-11-16 18:53  Kyle Wheeler <kbwheel@sandia.gov>

	* created the prepare() and run() functions for Megan

2006-11-16 17:59  Kyle Wheeler <kbwheel@sandia.gov>

	* some speed improvements, decoupled asserts and debugging

2006-11-15 23:19  Kyle Wheeler <kbwheel@sandia.gov>

	* removed extraneous arguments to atomic functions

2006-11-15 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* removed extraneous memory references in other queue operations

2006-11-15 23:04  Kyle Wheeler <kbwheel@sandia.gov>

	* removed extraneous memory references in nonblocking dq

2006-11-15 22:55  Kyle Wheeler <kbwheel@sandia.gov>

	* fixing a major problem in unlocking things that were never locked
	  in the first place (would lock the hashtable and never unlock it)

2006-11-15 22:54  Kyle Wheeler <kbwheel@sandia.gov>

	* speeding up all the locks

2006-11-13 19:03  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI comments

2006-11-13 18:51  Kyle Wheeler <kbwheel@sandia.gov>

	* gcc -pedantic warnings eliminated for c99

2006-11-13 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* corrected qthread_readFF and qthread_readFE

2006-11-13 18:45  Kyle Wheeler <kbwheel@sandia.gov>

	* added qthread_writeF()

2006-11-13 17:47  Kyle Wheeler <kbwheel@sandia.gov>

	* tidy up aligning

2006-11-07 23:21  Kyle Wheeler <kbwheel@sandia.gov>

	* oops, Im an idiot

2006-11-07 17:53  Kyle Wheeler <kbwheel@sandia.gov>

	* a correction for the end of the qthread_wrapper

2006-11-07 17:48  Kyle Wheeler <kbwheel@sandia.gov>

	* more memory efficiency for delayed joins (does this actually
	  affect many things? I doubt it, but you never know, and it doesnt
	  hurt anything)

2006-11-07 17:41  Kyle Wheeler <kbwheel@sandia.gov>

	* fix pgCC compile errors (one warning remains, because C++ structs
	  are really classes)

2006-11-07 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* this api is definitely binary incompatible with the previous

2006-11-07 00:02  Kyle Wheeler <kbwheel@sandia.gov>

	* made many things const, to help with optimization. also changed
	  the locking "sub" helpers to be detached (as they should be)

2006-11-07 00:01  Kyle Wheeler <kbwheel@sandia.gov>

	* made many things const to help with optimization

2006-11-06 23:16  Kyle Wheeler <kbwheel@sandia.gov>

	* added qthread_shep() to find out my current shepherd id

2006-11-06 23:01  Kyle Wheeler <kbwheel@sandia.gov>

	* more helpful comments, and moved WORDSIZE to the .h file

2006-11-06 22:55  Kyle Wheeler <kbwheel@sandia.gov>

	* added the ability to proxy FEB locking commands

2006-11-06 22:18  Kyle Wheeler <kbwheel@sandia.gov>

	* corrected the comments

2006-11-06 22:12  Kyle Wheeler <kbwheel@sandia.gov>

	* 64-bit safe, works with new FEB locking semantics

2006-11-06 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* because qthread_lock and _unlock now function, now I can use
	  qthread_join() directly, and avoid nonsense that I had previously
	  had to go through to wait for things to finish.

2006-11-06 18:34  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_lock and _unlock now will function correctly if passed a
	  NULL thread

2006-11-06 17:16  Kyle Wheeler <kbwheel@sandia.gov>

	* correct cprops url

2006-11-06 17:14  Kyle Wheeler <kbwheel@sandia.gov>

	* updates from the new acinclude and configure.in

2006-11-06 17:09  Kyle Wheeler <kbwheel@sandia.gov>

	* need stdint... would like to have inttypes, but...

2006-11-06 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed struct rlimit on non-gcc compilers

2006-11-06 17:06  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI compilation notes

2006-11-06 17:05  Kyle Wheeler <kbwheel@sandia.gov>

	* PGI compilation fixes (i.e. portability) and made it usable by
	  C++ applications

2006-11-06 16:20  Kyle Wheeler <kbwheel@sandia.gov>

	* better descriptions

2006-11-06 16:17  Kyle Wheeler <kbwheel@sandia.gov>

	* pooling is fixed again. realized that addrres's were being fed to
	  other thread's pools, which will obviously cause problems in
	  unsynch'd pools. However, what this does is puts memory back in a
	  pool that it did not come from. This *shouldn't* be a problem,
	  because the size is right, but I mention it because you never
	  know.

2006-11-04 00:07  Kyle Wheeler <kbwheel@sandia.gov>

	* spacing

2006-11-04 00:03  Kyle Wheeler <kbwheel@sandia.gov>

	* pooling is broken again... not sure why. trimmed the critical
	  section in FEB table removal (unnecessary, but then, why not?)

2006-11-03 22:17  Kyle Wheeler <kbwheel@sandia.gov>

	* dont have private int file yet

2006-11-03 22:16  Kyle Wheeler <kbwheel@sandia.gov>

	* correct semantics

2006-11-03 22:15  Kyle Wheeler <kbwheel@sandia.gov>

	* play nicely with C++

2006-11-03 22:13  Kyle Wheeler <kbwheel@sandia.gov>

	* comments, many compilation fixes for non-gcc compilers (not all
	  finished), and some semantic fixes for the readFE/readFF
	  functions

2006-11-03 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* explain double-casting

2006-11-03 19:21  Kyle Wheeler <kbwheel@sandia.gov>

	* none of that memwatch stuff

2006-11-03 17:20  Kyle Wheeler <kbwheel@sandia.gov>

	* removing CVS files is a little much

2006-11-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_self support

2006-11-03 15:22  Kyle Wheeler <kbwheel@sandia.gov>

	* qthread_self support (theres got to be a faster way)

2006-11-01 20:19  Kyle Wheeler <kbwheel@sandia.gov>

	* better compatability and warning messages

2006-11-01 00:13  Kyle Wheeler <kbwheel@sandia.gov>

	* it now works on OSX as well as linux and solaris -- pulled in
	  parts from libtask (by Russ Cox)

2006-11-01 00:12  Kyle Wheeler <kbwheel@sandia.gov>

	* works with the portable makecontext stuff, also cleaned up the
	  code some

2006-10-31 19:40  Richard Murphy <rcmurph@sandia.gov>

	* updated names/affiliations

2006-10-31 17:36  Kyle Wheeler <kbwheel@sandia.gov>

	* no, on some architectures (dunno which ones) this getcontext is
	  required (it is used by most other similar coroutine libraries)

2006-10-31 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* accuracy and completeness

2006-10-31 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* folding markers

2006-10-31 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* comments

2006-10-30 23:14  Kyle Wheeler <kbwheel@sandia.gov>

	* did not need the extraneous getcontext

2006-10-30 23:06  Kyle Wheeler <kbwheel@sandia.gov>

	* ooops, left debugging #include in there

2006-10-30 20:17  Kyle Wheeler <kbwheel@sandia.gov>

	* dynmap

2006-10-30 20:17  Kyle Wheeler <kbwheel@sandia.gov>

	* per-pthread memory pooling eliminates a bunch of unnecessary
	  locking (some still needed)

2006-10-30 18:44  Kyle Wheeler <kbwheel@sandia.gov>

	* pooling stacks and contexts now. also assigning shepherd ID much
	  earlier (preparing for per-shepherd pools)

2006-10-26 17:44  Kyle Wheeler <kbwheel@sandia.gov>

	* the pooling seems a bit better now...

2006-10-26 14:17  Kyle Wheeler <kbwheel@sandia.gov>

	* added the dynamically-sized stuff

2006-10-26 14:16  Kyle Wheeler <kbwheel@sandia.gov>

	* added qalloc

2006-10-26 14:15  Kyle Wheeler <kbwheel@sandia.gov>

	* test detached threads

2006-10-26 14:14  Kyle Wheeler <kbwheel@sandia.gov>

	* Added detached threads (i.e. threads that clean up after
	  themselves when they
	  exit), and made it possible to toggle mempooling on and off
	  (currently,
	  mempools seem to be broken when compiled for 64-bit
	  architectures).

2006-10-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* minor touches

2006-10-18 21:13  Kyle Wheeler <kbwheel@sandia.gov>

	* not tied to the qthreads library yet, but interesting and useful

2006-10-17 18:42  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2006-10-17 18:41  Kyle Wheeler <kbwheel@sandia.gov>

	* minor cleanup for packaging

2006-10-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* cleanup for packaging

2006-10-17 18:38  Kyle Wheeler <kbwheel@sandia.gov>

	* FEB example

2006-10-17 17:35  Kyle Wheeler <kbwheel@sandia.gov>

	* oops - extraneous debugging code

2006-10-17 17:34  Kyle Wheeler <kbwheel@sandia.gov>

	* full FEB support is now functionally complete. also, unlocking
	  unlocked memory wont cause the program to abort anymore.

2006-10-16 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* *** empty log message ***

2006-10-16 15:28  Kyle Wheeler <kbwheel@sandia.gov>

	* beginning of full FEB support

2006-10-11 23:06  Kyle Wheeler <kbwheel@sandia.gov>

	* minor fixes, accessor functions

2006-10-11 21:35  Kyle Wheeler <kbwheel@sandia.gov>

	* moved internal functions out of the public header file, did a
	  little reformatting

2006-10-11 17:07  Kyle Wheeler <kbwheel@sandia.gov>

	* a little quick info

2006-10-11 16:46  Kyle Wheeler <kbwheel@sandia.gov>

	* better error messages

2006-10-11 16:44  Kyle Wheeler <kbwheel@sandia.gov>

	* OSX does not have get/set/swapcontext, so should detect that and
	  complain bitterly

2006-10-11 16:39  Kyle Wheeler <kbwheel@sandia.gov>

	* all the automake files

2006-10-11 16:37  Kyle Wheeler <kbwheel@sandia.gov>

	* better autoconfing

2006-10-11 16:13  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed preproc warning messages

2006-10-11 16:04  Kyle Wheeler <kbwheel@sandia.gov>

	* some compiler warnings and other tidying

2006-10-11 15:43  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed the giant stack size!

2006-10-10 19:09  Kyle Wheeler <kbwheel@sandia.gov>

	* excise shepstat

2006-10-10 18:04  Kyle Wheeler <kbwheel@sandia.gov>

	* autoconf/automake

2006-10-10 17:27  Kyle Wheeler <kbwheel@sandia.gov>

	* using cprops now

2006-10-10 17:26  Kyle Wheeler <kbwheel@sandia.gov>

	* minor tidying

2006-10-10 17:10  Kyle Wheeler <kbwheel@sandia.gov>

	* removed the FEB race condition, and shrunk the memory
	  requirements

2006-10-10 15:54  Kyle Wheeler <kbwheel@sandia.gov>

	* memory pooling

2006-10-06 15:57  Kyle Wheeler <kbwheel@sandia.gov>

	* why does test.c not work?

2006-10-05 21:28  Kyle Wheeler <kbwheel@sandia.gov>

	* fixed qthread_join, added comments, folding, and made the
	  qthread_debug function local

2006-10-04 19:13  Richard Murphy <rcmurph@sandia.gov>

	* working version

2006-08-24 20:48  Richard Murphy <rcmurph@sandia.gov>

	* runs correctly on solaris with solaris compilers

2006-08-02 18:07  Richard Murphy <rcmurph@sandia.gov>

	* this actually works

2006-08-02 15:09  Richard Murphy <rcmurph@sandia.gov>

	* updated thread library - nearly functional

2006-06-28 23:32  Richard Murphy <rcmurph@sandia.gov>

	* This commit was generated by cvs2svn to compensate for changes in
	  r8,
	  which included commits to RCS files with non-trunk default
	  branches.

2006-06-28 23:16  Richard Murphy <rcmurph@sandia.gov>

	* This commit was generated by cvs2svn to compensate for changes in
	  r6,
	  which included commits to RCS files with non-trunk default
	  branches.

2006-06-28 19:22  Richard Murphy <rcmurph@sandia.gov>

	* This commit was generated by cvs2svn to compensate for changes in
	  r4,
	  which included commits to RCS files with non-trunk default
	  branches.

2006-06-22 19:15  Richard Murphy <rcmurph@sandia.gov>

	* This commit was generated by cvs2svn to compensate for changes in
	  r2,
	  which included commits to RCS files with non-trunk default
	  branches.

2006-06-22 19:15  

	* New repository initialized by cvs2svn.

